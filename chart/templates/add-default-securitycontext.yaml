{{- $name := "add-default-securitycontext" }}
{{- $failureAction := default (dig $name "validationFailureAction" nil .Values.policies) .Values.validationFailureAction  }}
{{- if and .Values.enabled (dig $name "enabled" false .Values.policies) }}
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: {{ $name }}
  annotations:
    policies.kyverno.io/title: Add Default securityContext
    policies.kyverno.io/category: Pod Security Standards (Baseline)
    policies.kyverno.io/severity: {{ default "high" (dig $name "severity" nil .Values.policies) }}
    policies.kyverno.io/subject: Pod
    policies.kyverno.io/minversion: 1.6.0
    policies.kyverno.io/description: >-
      A Pod securityContext entry defines fields such as the user and group which should be used to run the Pod.
      Sometimes choosing default values for users rather than blocking is a better alternative to not impede
      such Pod definitions. This policy will mutate a Pod to set `runAsNonRoot`, `runAsUser`, `runAsGroup`, and 
      `fsGroup` fields within the Pod securityContext if they are not already set.     
  labels: {{- include "kyverno-policies.labels" . | nindent 4 }} 
spec:
  {{- include "kyverno-policies.webhookTimeoutSeconds" (merge (dict "name" $name) .) | indent 2 }}
  validationFailureAction: {{ $failureAction }}
  background: {{ .Values.background }}
  failurePolicy: {{ default .Values.failurePolicy (include "setFailurePolicy" $failureAction) }}
  rules:
  - name: {{ $name }}
    {{- include "kyverno-policies.exclude" (merge (dict "name" $name) .) | indent 4 }}
    {{- include "kyverno-policies.match" (merge (dict "name" $name "kinds" (list "Pod")) .) | nindent 4 }}
    {{- with index .Values "policyPreconditions" $name }}
    preconditions:
      {{- toYaml . | nindent 6 }}
    {{- end }}
    mutate:
      patchStrategicMerge:
        spec:
          securityContext:
            +(runAsNonRoot): true
            +(runAsUser): 65534
            +(runAsGroup): 65534
            +(fsGroup): 65534
{{- end }}