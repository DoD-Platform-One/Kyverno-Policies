{{- $name := "restrict-selinux" }}
{{- if and .Values.enabled (dig $name "enabled" false .Values.policies) }}
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: {{ $name }}
  annotations:
    policies.kyverno.io/title: Restrict SELinux Options
    policies.kyverno.io/category: Pod Security Standards (Baseline)
    policies.kyverno.io/severity: {{ default "high" (dig $name "severity" nil .Values.policies) }}
    policies.kyverno.io/subject: Pod
    policies.kyverno.io/description: >-
      SELinux options can be used to escalate privileges. This policy ensures that the `seLinuxOptions`
      type field is undefined or restricted to the allowed list and the `seLinuxOptions` user and role fields are undefined.
  labels: {{- include "kyverno-policies.labels" . | nindent 4 }}
spec:
  {{- include "kyverno-policies.webhookTimeoutSeconds" (merge (dict "name" $name) .) | indent 2 }}
  validationFailureAction: {{ default (dig $name "validationFailureAction" nil .Values.policies) .Values.validationFailureAction }}
  rules:
  - name: selinux-options-type
    {{- include "kyverno-policies.exclude" (merge (dict "name" $name) .) | indent 4 }}
    {{- include "kyverno-policies.match" (merge (dict "name" $name "kinds" (list "Pod")) .) | nindent 4 }}
    validate:
      message: >-
        Setting SELinux type is restricted.  The values from spec.securityContext.seLinuxOptions.type,
        spec.containers[*].securityContext.seLinuxOptions.type, spec.initContainers[*].securityContext.seLinuxOptions.type,
        and spec.ephemeralContainers[*].securityContext.seLinuxOptions.type must be in the allowed list.
      pattern:
        spec:
          =(securityContext):
            =(seLinuxOptions):
              =(type): "{{ join " | " (dig $name "parameters" "allowedValues" nil .Values.policies) }}"
          =(initContainers):
            - =(securityContext):
                =(seLinuxOptions):
                  =(type): "{{ join " | " (dig $name "parameters" "allowedValues" nil .Values.policies) }}"
          containers:
            - =(securityContext):
                =(seLinuxOptions):
                  =(type): "{{ join " | " (dig $name "parameters" "allowedValues" nil .Values.policies) }}"
          =(ephemeralContainers):
            - =(securityContext):
                =(seLinuxOptions):
                  =(type): "{{ join " | " (dig $name "parameters" "allowedValues" nil .Values.policies) }}"
  - name: selinux-options-user
    {{- include "kyverno-policies.exclude" (merge (dict "name" $name) .) | indent 4 }}
    {{- include "kyverno-policies.match" (merge (dict "name" $name "kinds" (list "Pod")) .) | nindent 4 }}
    validate:
      message: >-
        Setting SELinux user is not allowed.  The fields spec.securityContext.seLinuxOptions.user,
        spec.containers[*].securityContext.seLinuxOptions.user, spec.initContainers[*].securityContext.seLinuxOptions.user,
        and spec.ephemeralContainers[*].securityContext.seLinuxOptions.user must be undefined.
      pattern:
        spec:
          =(securityContext):
            =(seLinuxOptions):
              X(user): "null"
          =(initContainers):
            - =(securityContext):
                =(seLinuxOptions):
                  X(user): "null"
          containers:
            - =(securityContext):
                =(seLinuxOptions):
                  X(user): "null"
          =(ephemeralContainers):
            - =(securityContext):
                =(seLinuxOptions):
                  X(user): "null"
  - name: selinux-options-role
    {{- include "kyverno-policies.exclude" (merge (dict "name" $name) .) | indent 4 }}
    {{- include "kyverno-policies.match" (merge (dict "name" $name "kinds" (list "Pod")) .) | nindent 4 }}
    validate:
      message: >-
        Setting SELinux role is not allowed.  The fields spec.securityContext.seLinuxOptions.role,
        spec.containers[*].securityContext.seLinuxOptions.role, spec.initContainers[*].securityContext.seLinuxOptions.role,
        and spec.ephemeralContainers[*].securityContext.seLinuxOptions.role must be undefined.
      pattern:
        spec:
          =(securityContext):
            =(seLinuxOptions):
              X(role): "null"
          =(initContainers):
            - =(securityContext):
                =(seLinuxOptions):
                  X(role): "null"
          containers:
            - =(securityContext):
                =(seLinuxOptions):
                  X(role): "null"
          =(ephemeralContainers):
            - =(securityContext):
                =(seLinuxOptions):
                  X(role): "null"
{{- end -}}