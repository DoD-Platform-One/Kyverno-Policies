#install kyverno
kyverno: 
  install: true

# -- Controls for the job that will wait for kyverno to be ready.  This can be used with Helm's --wait-for-jobs to wait kyverno to be ready.
waitforready:
  enabled: { .Values.kyverno.install }
  image:
    repository: registry1.dso.mil/ironbank/opensource/kubernetes/kubectl
    tag: v1.30.5
  imagePullSecrets:
    - name: private-registry

templating:
  enabled: false
  debug: false
  version: ~

# Overrides for all policies.  Blank values indicate to use the policy-specific value or the default value

# -- Enable policy deployments
enabled: true

# -- Override all policies' validation failure action with "Audit" or "Enforce".  If blank, uses policy setting.
validationFailureAction: ""

# -- API server behavior if the webhook fails to respond ('Ignore', 'Fail')
# For more info: https://kyverno.io/docs/writing-policies/policy-settings/
failurePolicy: Fail

# -- Policies background mode
background: true

# -- Kyverno version
# The default of "autodetect" will try to determine the currently installed version from the deployment
kyvernoVersion: autodetect

# -- Override all policies' time to wait for admission webhook to respond.  If blank, uses policy setting or default (10).  Range is 1 to 30.
webhookTimeoutSeconds: 30

# -- Adds an exclusion to all policies.  This is merged with any policy-specific excludes.  See https://kyverno.io/docs/writing-policies/match-exclude for fields.
exclude:
  #Do not want to block anything in kube-system
  any:
  - resources:
      namespaces:
      - kube-system

# -- Adds an excludeContainers to all policies.  This is merged with any policy-specific excludeContainers.
excludeContainers: []

# -- Customize the target Pod controllers for the auto-generated rules. (Eg. `none`, `Deployment`, `DaemonSet,Deployment,StatefulSet`)
# For more info https://kyverno.io/docs/writing-policies/autogen/.
autogenControllers: "Deployment,ReplicaSet,DaemonSet,StatefulSet"

# -- Additional labels to apply to all policies.
customLabels: {}

# -- Add preconditions to individual policies.
# Policies with multiple rules can have individual rules excluded by using the name of the rule as the key in the `policyPreconditions` map.
policyPreconditions: {}
  # # Exclude resources from individual policies
  # require-run-as-non-root-user:
  #   all:
  #   - key: "{{ request.object.metadata.name }}"
  #     operator: NotEquals
  #     value: "dcgm-exporter*"
  # # Policies with multiple rules can have individual rules excluded
  # require-drop-all:
  #   any:
  #   - key: "{{ request.object.metadata.name }}"
  #     operator: NotEquals
  #     value: "dcgm-exporter*"
  # adding-capabilities-strict:
  #   all:
  #   - key: "{{ request.object.metadata.name }}"
  #     operator: NotEquals
  #     value: "dcgm-exporter*"

# webhookTimeoutSecond: can be added to any policy to override the timeout for that policy
# match: can be added to any policy to completely override selection of resources by the policy
# exclude: can be added to any policy to add specific exclusions to the policy
# See https://kyverno.io/docs/writing-policies/match-exclude on how to format match/exclude

policies:
  # Keep policies in alphabetical order and name them the same as the .yaml file to help with configuration and troubleshooting

  # -- Sample policy showing values that can be added to any policy
  sample:
    # -- Controls policy deployment
    enabled: false
    # -- Controls if a validation policy rule failure should disallow (Enforce) or allow (Audit) the admission
    validationFailureAction: Audit # or Enforce
    # -- Specifies the maximum time in seconds allowed to apply this policy. Default is 10. Range is 1 to 30.
    webhookTimeoutSeconds: ""
    # -- Defines when this policy's rules should be applied.  This completely overrides any default matches.
    match: {}
    # -- Defines when this policy's rules should not be applied.  This completely overrides any default excludes.
    exclude: {}
    # -- Policy specific parameters that are added to the configMap for the policy rules
    parameters:
      # -- Adds a container exclusion (by name) to a specific policy.  This is merged with any global excludeContainers.
      excludeContainers: []

  # -- Clone existing configMap or secret in new Namespaces
  clone-configs:
    enabled: false
    parameters:
      # -- ConfigMap or Secrets that should be cloned.  Each item requres the kind, name, and namespace of the resource to clone
      clone: []
        #   # -- Name of the ConfigMap/Secret
        # - name: sample
        #   # -- Kind of the resource: ConfigMap or Secret
        #   kind: ConfigMap
        #   # -- Namespace to find the ConfigMap/Secret.  This can be templated.
        #   namespace: "{{ .Release.Namespace }}"
    generateExisting: false 

  # -- Prevent specified annotations on pods
  disallow-annotations:
    enabled: false
    validationFailureAction: Audit
    parameters:
      # -- List of annotations disallowed on pods.  Entries can be just a "key", or a quoted "key: value".  Wildcards '*' and '?' are supported.
      disallow: []

  # -- Prevent resources that use deprecated or removed APIs (through Kubernetes 1.26)
  disallow-deprecated-apis:
    enabled: false
    validationFailureAction: Audit

  # -- Prevent use of the host namespace (PID, IPC, Network) by pods
  disallow-host-namespaces:
    enabled: true
    validationFailureAction: Enforce

  # -- Prevent container images with specified tags.  Also, requires images to have a tag.
  disallow-image-tags:
    enabled: false
    validationFailureAction: Audit
    parameters:
      disallow:
      - latest

  # -- Prevent the `sidecar.istio.io/inject: false` label on pods.
  disallow-istio-injection-bypass:
    enabled: false
    validationFailureAction: Audit

  # -- Prevent specified labels on pods
  disallow-labels:
    enabled: false
    validationFailureAction: Audit
    parameters:
      # -- List of labels disallowed on pods.  Entries can be just a "key", or a quoted "key: value".  Wildcards '*' and '?' are supported.
      disallow: []

  # -- Prevent pods from using the listed namespaces
  disallow-namespaces:
    enabled: false
    validationFailureAction: Audit
    parameters:
      # -- List of namespaces to deny pod deployment
      disallow:
      - default

  # -- Prevent services of the type NodePort
  disallow-nodeport-services:
    enabled: true
    validationFailureAction: Audit

  # -- Prevent the use of `exec` or `attach` on pods
  disallow-pod-exec:
    enabled: false
    validationFailureAction: Audit

  # -- Prevent privilege escalation on pods
  disallow-privilege-escalation:
    enabled: true
    validationFailureAction: Enforce

  # -- Prevent Automounting of Kubernetes API Credentials on Pods and Service Accounts
  disallow-auto-mount-service-account-token:
    enabled: true
    validationFailureAction: Audit

  # -- Prevent containers that run as privileged
  disallow-privileged-containers:
    enabled: true
    validationFailureAction: Enforce

  # -- Prevent specified SELinux options from being used on pods.
  disallow-selinux-options:
    enabled: true
    validationFailureAction: Enforce
    parameters:
      # -- List of selinux options that are not allowed.  Valid values include `level`, `role`, `type`, and `user`.
      # Defaults pulled from https://kubernetes.io/docs/concepts/security/pod-security-standards
      disallow:
      - user
      - role

  # -- Prevent tolerations that bypass specified taints
  disallow-tolerations:
    enabled: false
    validationFailureAction: Audit
    parameters:
      # -- List of taints to protect from toleration.  Each entry can have `key`, `value`, and/or `effect`.  Wildcards '*' and '?' can be used
      # If key, value, or effect are not defined, they are ignored in the policy rule
      disallow:
      # Prevent scheduling of pods on control plane nodes
      - key: node-role.kubernetes.io/master

      # The following example would prevent tolerations that match a taint of "Critical*Only=true:*NoSchedule" where '*' is zero or more characters.
      # - key: "Critical*Only"
      #   value: "true"
      #   effect: "*NoSchedule"
      # This would block tolerations with
      #  - key=null && effect=(NoSchedule || PreferNoSchedule)
      #  - key=Critical*Only && operator=Exists && effect=(null || NoSchedule || PreferNoSchedule)
      #  - key=Critical*Only && operator=Equal && value=true && effect=(null || NoSchedule || PreferNoSchedule)

  # -- Prevent additional RBAC permissions on default service accounts
  disallow-rbac-on-default-serviceaccounts:
    enabled: false
    validationFailureAction: Audit
    exclude:
      any:
      - resources:
          # Clusters allow all service accounts access to the service account issuer discovery documents
          # See https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#service-account-issuer-discovery
          name: system:service-account-issuer-discovery

  # -- Require specified annotations on all pods
  require-annotations:
    enabled: false
    validationFailureAction: Audit
    parameters:
      # -- List of annotations required on all pods.  Entries can be just a "key", or a quoted "key: value".  Wildcards '*' and '?' are supported.
      require: []

  # -- Require containers have CPU limits defined and within the specified range
  require-cpu-limit:
    enabled: false
    validationFailureAction: Audit
    parameters:
      # -- CPU limitations (only one required condition needs to be met).  The following operators are valid: >, <, >=, <=, !, |, &.
      require:
      - <10

  # -- Requires containers to drop all Linux capabilities
  require-drop-all-capabilities:
    enabled: true
    validationFailureAction: Enforce

  # -- Require specified images to be signed and verified
  require-image-signature:
    enabled: true
    validationFailureAction: Enforce
    parameters:
      # -- List of images that must be signed and the public key to verify.  Use `kubectl explain clusterpolicy.spec.rules.verifyImages` for fields.
      require:
      - imageReferences:
        - "registry1.dso.mil/ironbank/*"
        attestors:
        - count: 1
          entries:
          - keys:
              publicKeys: |-
                -----BEGIN PUBLIC KEY-----
                MIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEAtQDv69q1kyiogpxvIVjh
                eNMLsI1GTLm+BuLWJN2rq4AA4k3+I7WqdvA1tKJ218DyXExljI3NTD4J5BnLeB6y
                WDvnTPXVu+pNj9W7Az0uyD73/WsMV1QR5VEzWMdMz+ZnN8IGd4JFl9p2N21YBD1R
                Y93+K4XgrZ/iSRk+mGBAs87UpF1ku/nru0H2+XwJtoV7pLrrai/pLdQeRh5Ogg9J
                z5qHer9EnZne6eBnZedvpf7bqfRt0Fqqk0pTzLQm4oFD3HnxdJUPt9ccoPx0IyF0
                rB01a53LBTeRXeUcHd5BpwhwgkIm2insbDIp+lBKjUfq4CfqRQcXLLUgtRUij6ke
                QfD7jgI9chBxbVE1U5Mc/RgftXuVGQzx1OrjenD4wIH4whtP1abTg6XLxqjgkgqq
                EJy5kUpv+ut0n1RBiIdH6wYXDum90fq4qQl+gHaER0bOYAQTCIFRrhrWJ8Qxj4uL
                xI+O5KgLX3TanMtfE7e2A86uzxiHBxEW4+AF2IMXuLviIQKc9z+/p93psfQ9nXXj
                B5i6qFWkF0BMuWibB8e+HHWRKLfNWXGdfLraoMPKwCrJWhYQ+8SRrqR+gbSNWbEM
                VardcwrQZ7NP7KIedquYQnfJ3ukbYikKgdBovGStFEPLaKKiYJiD5UIQhZ51SDdA
                k+PgLW7CzKW4u2+WLdjfalkCAwEAAQ==
                -----END PUBLIC KEY-----
              # Skip Rekor Transparency log check
              rekor:
                ignoreTlog: true
                url: ""
              ctlog:
                ignoreSCT: true                
        # Ironbank images are rebuilt nightly and tags are not immutable
        mutateDigest: false
        verifyDigest: false

  # -- Require Istio sidecar injection label on namespaces
  require-istio-on-namespaces:
    enabled: false
    validationFailureAction: Audit

  # -- Require specified labels to be on all pods
  require-labels:
    enabled: true
    validationFailureAction: Audit
    parameters:
      # -- List of labels required on all pods.  Entries can be just a "key", or a quoted "key: value".  Wildcards '*' and '?' are supported.
      # See https://kubernetes.io/docs/concepts/overview/working-with-objects/common-labels/#labels
      # See https://helm.sh/docs/chart_best_practices/labels/#standard-labels
      require:
      - app.kubernetes.io/name
      - app.kubernetes.io/instance
      - app.kubernetes.io/version
      - app
      - version

  # -- Require containers have memory limits defined and within the specified range
  require-memory-limit:
    enabled: false
    validationFailureAction: Audit
    parameters:
      # -- Memory limitations (only one required condition needs to be met).  Can use standard Kubernetes resource units (e.g. Mi, Gi).  The following operators are valid: >, <, >=, <=, !, |, &.
      require:
      - <64Gi

  # -- Require containers to run with non-root group
  require-non-root-group:
    enabled: true
    validationFailureAction: Enforce

  # -- Require containers to run as non-root user
  require-non-root-user:
    enabled: true
    validationFailureAction: Enforce

  # -- Require specified probes on pods
  require-probes:
    enabled: false
    validationFailureAction: Audit
    parameters:
      # -- List of probes that are required on pods.  Valid values are `readinessProbe`, `livenessProbe`, and `startupProbe`.
      require:
      - readinessProbe
      - livenessProbe

  # -- Require CPU and memory requests equal limits for guaranteed quality of service
  require-requests-equal-limits:
    enabled: false
    validationFailureAction: Audit

  # -- Require containers set root filesystem to read-only
  require-ro-rootfs:
    enabled: false
    validationFailureAction: Audit

  # -- Restricts pods that use AppArmor to specified profiles
  restrict-apparmor:
    enabled: true
    validationFailureAction: Enforce
    parameters:
      # -- List of allowed AppArmor profiles
      # Defaults pulled from https://kubernetes.io/docs/concepts/security/pod-security-standards/#baseline
      allow:
      - runtime/default
      - localhost/*

  # -- Restrict services with External IPs to a specified list (CVE-2020-8554)
  restrict-external-ips:
    enabled: true
    validationFailureAction: Enforce
    parameters:
      # -- List of external IPs allowed in services.  Must be an IP address.  Use the wildcard `?*` to support subnets (e.g. `192.168.0.?*`)
      allow: []

  # -- Restrict services with External Names to a specified list (CVE-2020-8554)
  restrict-external-names:
    enabled: true
    validationFailureAction: Enforce
    parameters:
      # -- List of external names allowed in services.  Must be a lowercase RFC-1123 hostname.
      allow: []

  # -- Restrict Linux capabilities added to containers to the specified list
  restrict-capabilities:
    enabled: true
    validationFailureAction: Enforce
    parameters:
      # -- List of capabilities that are allowed to be added
      # Defaults pulled from https://kubernetes.io/docs/concepts/security/pod-security-standards/#restricted
      # See https://man7.org/linux/man-pages/man7/capabilities.7.html for list of capabilities.  The `CAP_` prefix is removed in Kubernetes names.
      allow:
      - NET_BIND_SERVICE

  # -- Restrict container group IDs to specified ranges
  # NOTE: Using require-non-root-group will force runAsGroup to be defined
  restrict-group-id:
    enabled: false
    validationFailureAction: Audit
    parameters:
      # -- Allowed group IDs / ranges.  The following operators are valid: >, <, >=, <=, !, |, &.
      # For a lower and upper limit, use ">=min & <=max"
      allow:
      - ">=1000"

  # -- Restrict the paths that can be mounted by hostPath volumes to the allowed list.  HostPath volumes are normally disallowed.  If exceptions are made, the path(s) should be restricted.
  restrict-host-path-mount:
    enabled: true
    validationFailureAction: Audit
    parameters:
      # -- List of allowed paths for hostPath volumes to mount
      allow: []

  restrict-host-path-mount-pv:
    enabled: true
    validationFailureAction: Audit
    parameters:
      # -- List of allowed paths for hostPath volumes to mount
      allow: []

  # -- Restrict the paths that can be mounted as read/write by hostPath volumes to the allowed list.  HostPath volumes, if allowed, should normally be mounted as read-only.  If exceptions are made, the path(s) should be restricted.
  restrict-host-path-write:
    enabled: true
    validationFailureAction: Audit
    parameters:
      # -- List of allowed paths for hostPath volumes to mount as read/write
      allow: []

  # -- Restrict host ports in containers to the specified list
  restrict-host-ports:
    enabled: true
    validationFailureAction: Enforce
    parameters:
      # -- List of allowed host ports
      allow: []

  # -- Restricts container images to registries in the specified list
  restrict-image-registries:
    enabled: true
    validationFailureAction: Audit
    parameters:
      # -- List of allowed registries that images may use
      allow:
      - registry1.dso.mil

  # -- Restrict mounting /proc to the specified mask
  restrict-proc-mount:
    enabled: true
    validationFailureAction: Enforce
    parameters:
      # -- List of allowed proc mount values.  Valid values are `Default` and `Unmasked`.
      # Defaults pulled from https://kubernetes.io/docs/concepts/security/pod-security-standards
      allow:
      - Default

  # -- Restrict seccomp profiles to the specified list
  restrict-seccomp:
    enabled: true
    validationFailureAction: Enforce
    parameters:
      # -- List of allowed seccomp profiles.  Valid values are `Localhost`, `RuntimeDefault`, and `Unconfined`
      # Defaults pulled from https://kubernetes.io/docs/concepts/security/pod-security-standards/#restricted
      allow:
      - RuntimeDefault
      - Localhost

  # -- Restrict SELinux types to the specified list.
  restrict-selinux-type:
    enabled: true
    validationFailureAction: Enforce
    parameters:
      # -- List of allowed values for the `type` field
      # Defaults pulled from https://kubernetes.io/docs/concepts/security/pod-security-standards
      allow:
      - container_t
      - container_init_t
      - container_kvm_t

  # -- Restrict sysctls to the specified list
  restrict-sysctls:
    enabled: true
    validationFailureAction: Enforce
    parameters:
      # -- List of allowed sysctls.
      # Defaults pulled from https://kubernetes.io/docs/concepts/security/pod-security-standards
      allow:
      - kernel.shm_rmid_forced
      - net.ipv4.ip_local_port_range
      - net.ipv4.ip_unprivileged_port_start
      - net.ipv4.tcp_syncookies
      - net.ipv4.ping_group_range
      - net.ipv4.ip_local_reserved_ports
      - net.ipv4.tcp_keepalive_time
      - net.ipv4.tcp_fin_timeout
      - net.ipv4.tcp_keepalive_intvl
      - net.ipv4.tcp_keepalive_probes

  # -- Restrict user IDs to the specified ranges
  # NOTE: Using require-non-root-user will force runAsUser to be defined
  restrict-user-id:
    enabled: false
    validationFailureAction: Audit
    parameters:
      # -- Allowed user IDs / ranges.  The following operators are valid: >, <, >=, <=, !, |, &.
      # For a lower and upper limit, use ">=min & <=max"
      allow:
      - ">=1000"

  # -- Restrict the volume types to the specified list
  restrict-volume-types:
    enabled: true
    validationFailureAction: Enforce
    parameters:
      # -- List of allowed Volume types.  Valid values are the volume types listed here: https://kubernetes.io/docs/concepts/storage/volumes/#volume-types
      # Defaults pulled from https://kubernetes.io/docs/concepts/security/pod-security-standards/#restricted
      allow:
      - "configMap"
      - "csi"
      - "downwardAPI"
      - "emptyDir"
      - "ephemeral"
      - "persistentVolumeClaim"
      - "projected"
      - "secret"

  # -- Updates the image pull policy on containers
  update-image-pull-policy:
    enabled: false
    parameters:
      # -- List of image pull policy updates.  `from` contains the pull policy value to replace.  If `from` is blank, it matches everything.  `to` contains the new pull policy to use.  Must be one of `Always`, `Never`, or `IfNotPresent`.
      update:
      - to: Always

  # -- Updates an existing image registry with a new registry in containers (e.g. proxy)
  update-image-registry:
    enabled: false
    parameters:
      # -- List of registry updates.  `from` contains the registry to replace. `to` contains the new registry to use.
      update: []
      # - from: "registry.to.replace"
      #   to: "new.registry.to.use"

  # -- List of namespaces to explictly disable mounting the serviceaccount token
  update-automountserviceaccounttokens-default:
    enabled: false
#   namespaces:
#     - istio-system
#     - istio-operator

  # -- For each namespace provide a list of serviceAccounts to disable automounting their tokens
  # -- as volumes on the pods.
  # -- List pods to explictly enable mounting the serviceaccount token
  update-automountserviceaccounttokens:
    enabled: false
#   namespaces:
#     - namespace: istio-system
#       serviceAccounts:
#       - istiod
#       pods:
#       - istiod-*
#     - namespace: istio-operator
#       serviceAccounts:
#       - istio-operator
#       pods:
#          allow: 
#          - istiod-*
#          - istio-operator-*


# -- Adds custom policies.  See https://kyverno.io/docs/writing-policies/.
additionalPolicies:
  # -- Name of the policy.  Addtional policies can be added by adding a key.
  samplePolicy:
    # -- Controls policy deployment
    enabled: false
    # -- Kind of policy.  Currently, "ClusterPolicy" and "Policy" are supported.
    kind: ClusterPolicy
    # -- If kind is "Policy", which namespace to target.  The namespace must already exist.
    namespace: ""
    # -- Policy annotations to add
    annotations:
      # -- Human readable name of policy
      policies.kyverno.io/title: Sample Policy
      # -- Category of policy.  Arbitrary.
      policies.kyverno.io/category: Examples
      # -- Severity of policy if a violation occurs.  Choose "critical", "high", "medium", "low".
      policies.kyverno.io/severity: low
      # -- Type of resource policy applies to (e.g. Pod, Service, Namespace)
      policies.kyverno.io/subject: Pod
      # -- Description of what the policy does, why it is important, and what items are allowed or unallowed.
      policies.kyverno.io/description: >-
        This sample policy blocks pods from deploying into the 'default' namespace.
    # -- Policy specification.  See `kubectl explain clusterpolicies.spec`
    spec:
      # -- Policy rules.  At least one is required
      rules:
      - name: sample-rule
        match:
          any:
          - resources:
              kinds:
              - Pods
        validate:
          message: "Using 'default' namespace is not allowed."
          pattern:
            metadata:
              namespace: "!default"


waitJob:
  enabled: true
  kind: ClusterRole
  scripts:
    image: registry1.dso.mil/ironbank/opensource/kubernetes/kubectl:v1.30.5
  permissions:
    apiGroups:
      - kyverno.io
    resources:
      - clusterpolicies
      - policies

## Bigbang Additions

## Use serviceMonitor instead
# monitoring:
#   enabled: false
networkPolicies:
  enabled: false
  # See `kubectl cluster-info` and then resolve to IP
  controlPlaneCidr: 0.0.0.0/0
  # Required if the container registry exists must be accessed over the internet
  externalRegistries:
    allowEgress: false
    ports: []
    # ports:
    # - port: 1234
    #   protocol: TCP
  allowExternalRegistryEgress: false
  additionalPolicies: []
istio:
  enabled: false
openshift: false

# Kyverno Settings:
# -- Internal settings used with `helm template` to generate install manifest
# @ignored


global:
  image:
    # -- (string) Global value that allows to set a single image registry across all deployments.
    # When set, it will override any values set under `.image.registry` across the chart.
    registry: registry1.dso.mil
  imagePullSecrets:
    - name: private-registry
  pullPolicy: IfNotPresent
  caCertificates:
    # -- Global CA certificates to use with Kyverno deployments
    # This value is expected to be one large string of CA certificates
    # Individual controller values will override this global value
    data: ~
    # -- Global value to set single volume to be mounted for CA certificates for all deployments.
    # Not used when `.Values.global.caCertificates.data` is defined
    # Individual  controller values will override this global value
    volume: {}
    # Example to use hostPath:
    # hostPath:
    #   path: /etc/pki/tls/ca-certificates.crt
    #   type: File
  # -- Additional container environment variables to apply to all containers and init containers
  extraEnvVars: []
  # Example setting proxy
  # extraEnvVars:
  # - name: HTTPS_PROXY
  #   value: 'https://proxy.example.com:3128'

  # -- Global node labels for pod assignment. Non-global values will override the global value.
  nodeSelector: {}
# -- (string) Override the name of the chart
nameOverride: ~
# -- (string) Override the expanded name of the chart
fullnameOverride: ~
# -- (string) Override the namespace the chart deploys to
namespaceOverride: ~

# CRDs configuration
crds:
  # -- Whether to have Helm install the Kyverno CRDs, if the CRDs are not installed by Helm, they must be added before policies can be created
  install: true
  groups:
    # -- Install CRDs in group `kyverno.io`
    kyverno:
      admissionreports: true
      backgroundscanreports: true
      cleanuppolicies: true
      clusteradmissionreports: true
      clusterbackgroundscanreports: true
      clustercleanuppolicies: true
      clusterpolicies: true
      globalcontextentries: true
      policies: true
      policyexceptions: true
      updaterequests: true
    # -- Install CRDs in group `reports.kyverno.io`
    reports:
      clusterephemeralreports: true
      ephemeralreports: true
    # -- Install CRDs in group `wgpolicyk8s.io`
    wgpolicyk8s:
      clusterpolicyreports: true
      policyreports: true
  # -- Additional CRDs annotations
  annotations: {}
  # argocd.argoproj.io/sync-options: Replace=true
  # strategy.spinnaker.io/replace: 'true'

  # -- Additional CRDs labels
  customLabels: {}
  migration:
    # -- Enable CRDs migration using helm post upgrade hook
    enabled: true
    # -- Resources to migrate
    resources:
      - admissionreports.kyverno.io
      - backgroundscanreports.kyverno.io
      - cleanuppolicies.kyverno.io
      - clusteradmissionreports.kyverno.io
      - clusterbackgroundscanreports.kyverno.io
      - clustercleanuppolicies.kyverno.io
      - clusterpolicies.kyverno.io
      - globalcontextentries.kyverno.io
      - policies.kyverno.io
      - policyexceptions.kyverno.io
      - updaterequests.kyverno.io
    image:
      # -- (string) Image registry
      registry: registry1.dso.mil
      # -- (string) Image repository
      repository: ironbank/opensource/kyverno/kyvernocli
      # -- (string) Image tag
      # Defaults to appVersion in Chart.yaml if omitted
      tag: 'v1.12.6'
      # -- (string) Image pull policy
      pullPolicy: ~
    imagePullSecrets:
      - name: private-registry
  # -- Security context for the pod
  podSecurityContext:
    runAsUser: 1000
    runAsGroup: 1000
    runAsNonRoot: true
    # -- Node labels for pod assignment
    nodeSelector: {}
    # -- List of node taints to tolerate
    tolerations: []
    # -- Pod anti affinity constraints.
    podAntiAffinity: {}
    # -- Pod affinity constraints.
    podAffinity: {}
    # -- Pod labels.
    podLabels: {}
    # -- Pod annotations.
    podAnnotations: {}
    # -- Node affinity constraints.
    nodeAffinity: {}
    # -- Security context for the hook containers
    securityContext:
      runAsUser: 65534
      runAsGroup: 65534
      runAsNonRoot: true
      privileged: false
      allowPrivilegeEscalation: false
      readOnlyRootFilesystem: true
      capabilities:
        drop:
          - ALL
      seccompProfile:
        type: RuntimeDefault
# Configuration
config:
  # -- Create the configmap.
  create: true

  # -- Preserve the configmap settings during upgrade.
  preserve: true

  # -- (string) The configmap name (required if `create` is `false`).
  name: ~
  # -- Additional annotations to add to the configmap.
  annotations: {}
  # -- Enable registry mutation for container images. Enabled by default.
  enableDefaultRegistryMutation: true
  # -- The registry hostname used for the image mutation.
  defaultRegistry: registry1.dso.mil
  # -- Exclude groups
  excludeGroups:
    - system:nodes
  # -- Exclude usernames
  excludeUsernames: []
  # - '!system:kube-scheduler'

  # -- Exclude roles
  excludeRoles: []
  # -- Exclude roles
  excludeClusterRoles: []
  # -- Generate success events.
  generateSuccessEvents: false
  # -- Resource types to be skipped by the Kyverno policy engine.
  # Make sure to surround each entry in quotes so that it doesn't get parsed as a nested YAML list.
  # These are joined together without spaces, run through `tpl`, and the result is set in the config map.
  # @default -- See [values.yaml](values.yaml)
  resourceFilters:
    - '[Event,*,*]'
    - '[*/*,kube-system,*]'
    - '[*/*,kube-public,*]'
    - '[*/*,kube-node-lease,*]'
    - '[Node,*,*]'
    - '[Node/*,*,*]'
    - '[APIService,*,*]'
    - '[APIService/*,*,*]'
    - '[TokenReview,*,*]'
    - '[SubjectAccessReview,*,*]'
    - '[SelfSubjectAccessReview,*,*]'
    - '[Binding,*,*]'
    - '[Pod/binding,*,*]'
    - '[ReplicaSet,*,*]'
    - '[ReplicaSet/*,*,*]'
    - '[AdmissionReport,*,*]'
    - '[AdmissionReport/*,*,*]'
    - '[ClusterAdmissionReport,*,*]'
    - '[ClusterAdmissionReport/*,*,*]'
    - '[BackgroundScanReport,*,*]'
    - '[BackgroundScanReport/*,*,*]'
    - '[ClusterBackgroundScanReport,*,*]'
    - '[ClusterBackgroundScanReport/*,*,*]'
    # exclude resources from the chart
    - '[ClusterRole,*,{{ template "kyverno.admission-controller.roleName" . }}]'
    - '[ClusterRole,*,{{ template "kyverno.admission-controller.roleName" . }}:core]'
    - '[ClusterRole,*,{{ template "kyverno.admission-controller.roleName" . }}:additional]'
    - '[ClusterRole,*,{{ template "kyverno.background-controller.roleName" . }}]'
    - '[ClusterRole,*,{{ template "kyverno.background-controller.roleName" . }}:core]'
    - '[ClusterRole,*,{{ template "kyverno.background-controller.roleName" . }}:additional]'
    - '[ClusterRole,*,{{ template "kyverno.cleanup-controller.roleName" . }}]'
    - '[ClusterRole,*,{{ template "kyverno.cleanup-controller.roleName" . }}:core]'
    - '[ClusterRole,*,{{ template "kyverno.cleanup-controller.roleName" . }}:additional]'
    - '[ClusterRole,*,{{ template "kyverno.reports-controller.roleName" . }}]'
    - '[ClusterRole,*,{{ template "kyverno.reports-controller.roleName" . }}:core]'
    - '[ClusterRole,*,{{ template "kyverno.reports-controller.roleName" . }}:additional]'
    - '[ClusterRoleBinding,*,{{ template "kyverno.admission-controller.roleName" . }}]'
    - '[ClusterRoleBinding,*,{{ template "kyverno.background-controller.roleName" . }}]'
    - '[ClusterRoleBinding,*,{{ template "kyverno.cleanup-controller.roleName" . }}]'
    - '[ClusterRoleBinding,*,{{ template "kyverno.reports-controller.roleName" . }}]'
    - '[ServiceAccount,{{ include "kyverno.namespace" . }},{{ template "kyverno.admission-controller.serviceAccountName" . }}]'
    - '[ServiceAccount/*,{{ include "kyverno.namespace" . }},{{ template "kyverno.admission-controller.serviceAccountName" . }}]'
    - '[ServiceAccount,{{ include "kyverno.namespace" . }},{{ template "kyverno.background-controller.serviceAccountName" . }}]'
    - '[ServiceAccount/*,{{ include "kyverno.namespace" . }},{{ template "kyverno.background-controller.serviceAccountName" . }}]'
    - '[ServiceAccount,{{ include "kyverno.namespace" . }},{{ template "kyverno.cleanup-controller.serviceAccountName" . }}]'
    - '[ServiceAccount/*,{{ include "kyverno.namespace" . }},{{ template "kyverno.cleanup-controller.serviceAccountName" . }}]'
    - '[ServiceAccount,{{ include "kyverno.namespace" . }},{{ template "kyverno.reports-controller.serviceAccountName" . }}]'
    - '[ServiceAccount/*,{{ include "kyverno.namespace" . }},{{ template "kyverno.reports-controller.serviceAccountName" . }}]'
    - '[Role,{{ include "kyverno.namespace" . }},{{ template "kyverno.admission-controller.roleName" . }}]'
    - '[Role,{{ include "kyverno.namespace" . }},{{ template "kyverno.background-controller.roleName" . }}]'
    - '[Role,{{ include "kyverno.namespace" . }},{{ template "kyverno.cleanup-controller.roleName" . }}]'
    - '[Role,{{ include "kyverno.namespace" . }},{{ template "kyverno.reports-controller.roleName" . }}]'
    - '[RoleBinding,{{ include "kyverno.namespace" . }},{{ template "kyverno.admission-controller.roleName" . }}]'
    - '[RoleBinding,{{ include "kyverno.namespace" . }},{{ template "kyverno.background-controller.roleName" . }}]'
    - '[RoleBinding,{{ include "kyverno.namespace" . }},{{ template "kyverno.cleanup-controller.roleName" . }}]'
    - '[RoleBinding,{{ include "kyverno.namespace" . }},{{ template "kyverno.reports-controller.roleName" . }}]'
    - '[ConfigMap,{{ include "kyverno.namespace" . }},{{ template "kyverno.config.configMapName" . }}]'
    - '[ConfigMap,{{ include "kyverno.namespace" . }},{{ template "kyverno.config.metricsConfigMapName" . }}]'
    - '[Deployment,{{ include "kyverno.namespace" . }},{{ template "kyverno.admission-controller.name" . }}]'
    - '[Deployment/*,{{ include "kyverno.namespace" . }},{{ template "kyverno.admission-controller.name" . }}]'
    - '[Deployment,{{ include "kyverno.namespace" . }},{{ template "kyverno.background-controller.name" . }}]'
    - '[Deployment/*,{{ include "kyverno.namespace" . }},{{ template "kyverno.background-controller.name" . }}]'
    - '[Deployment,{{ include "kyverno.namespace" . }},{{ template "kyverno.cleanup-controller.name" . }}]'
    - '[Deployment/*,{{ include "kyverno.namespace" . }},{{ template "kyverno.cleanup-controller.name" . }}]'
    - '[Deployment,{{ include "kyverno.namespace" . }},{{ template "kyverno.reports-controller.name" . }}]'
    - '[Deployment/*,{{ include "kyverno.namespace" . }},{{ template "kyverno.reports-controller.name" . }}]'
    - '[Pod,{{ include "kyverno.namespace" . }},{{ template "kyverno.admission-controller.name" . }}-*]'
    - '[Pod/*,{{ include "kyverno.namespace" . }},{{ template "kyverno.admission-controller.name" . }}-*]'
    - '[Pod,{{ include "kyverno.namespace" . }},{{ template "kyverno.background-controller.name" . }}-*]'
    - '[Pod/*,{{ include "kyverno.namespace" . }},{{ template "kyverno.background-controller.name" . }}-*]'
    - '[Pod,{{ include "kyverno.namespace" . }},{{ template "kyverno.cleanup-controller.name" . }}-*]'
    - '[Pod/*,{{ include "kyverno.namespace" . }},{{ template "kyverno.cleanup-controller.name" . }}-*]'
    - '[Pod,{{ include "kyverno.namespace" . }},{{ template "kyverno.reports-controller.name" . }}-*]'
    - '[Pod/*,{{ include "kyverno.namespace" . }},{{ template "kyverno.reports-controller.name" . }}-*]'
    - '[Job,{{ include "kyverno.namespace" . }},{{ template "kyverno.fullname" . }}-hook-pre-delete]'
    - '[Job/*,{{ include "kyverno.namespace" . }},{{ template "kyverno.fullname" . }}-hook-pre-delete]'
    - '[Job,{{ include "kyverno.namespace" . }},{{ template "kyverno.fullname" . }}-clean-reports]'
    - '[Job/*,{{ include "kyverno.namespace" . }},{{ template "kyverno.fullname" . }}-clean-reports]'
    - '[NetworkPolicy,{{ include "kyverno.namespace" . }},{{ template "kyverno.admission-controller.name" . }}]'
    - '[NetworkPolicy/*,{{ include "kyverno.namespace" . }},{{ template "kyverno.admission-controller.name" . }}]'
    - '[NetworkPolicy,{{ include "kyverno.namespace" . }},{{ template "kyverno.background-controller.name" . }}]'
    - '[NetworkPolicy/*,{{ include "kyverno.namespace" . }},{{ template "kyverno.background-controller.name" . }}]'
    - '[NetworkPolicy,{{ include "kyverno.namespace" . }},{{ template "kyverno.cleanup-controller.name" . }}]'
    - '[NetworkPolicy/*,{{ include "kyverno.namespace" . }},{{ template "kyverno.cleanup-controller.name" . }}]'
    - '[NetworkPolicy,{{ include "kyverno.namespace" . }},{{ template "kyverno.reports-controller.name" . }}]'
    - '[NetworkPolicy/*,{{ include "kyverno.namespace" . }},{{ template "kyverno.reports-controller.name" . }}]'
    - '[PodDisruptionBudget,{{ include "kyverno.namespace" . }},{{ template "kyverno.admission-controller.name" . }}]'
    - '[PodDisruptionBudget/*,{{ include "kyverno.namespace" . }},{{ template "kyverno.admission-controller.name" . }}]'
    - '[PodDisruptionBudget,{{ include "kyverno.namespace" . }},{{ template "kyverno.background-controller.name" . }}]'
    - '[PodDisruptionBudget/*,{{ include "kyverno.namespace" . }},{{ template "kyverno.background-controller.name" . }}]'
    - '[PodDisruptionBudget,{{ include "kyverno.namespace" . }},{{ template "kyverno.cleanup-controller.name" . }}]'
    - '[PodDisruptionBudget/*,{{ include "kyverno.namespace" . }},{{ template "kyverno.cleanup-controller.name" . }}]'
    - '[PodDisruptionBudget,{{ include "kyverno.namespace" . }},{{ template "kyverno.reports-controller.name" . }}]'
    - '[PodDisruptionBudget/*,{{ include "kyverno.namespace" . }},{{ template "kyverno.reports-controller.name" . }}]'
    - '[Service,{{ include "kyverno.namespace" . }},{{ template "kyverno.admission-controller.serviceName" . }}]'
    - '[Service/*,{{ include "kyverno.namespace" . }},{{ template "kyverno.admission-controller.serviceName" . }}]'
    - '[Service,{{ include "kyverno.namespace" . }},{{ template "kyverno.admission-controller.serviceName" . }}-metrics]'
    - '[Service/*,{{ include "kyverno.namespace" . }},{{ template "kyverno.admission-controller.serviceName" . }}-metrics]'
    - '[Service,{{ include "kyverno.namespace" . }},{{ template "kyverno.background-controller.name" . }}-metrics]'
    - '[Service/*,{{ include "kyverno.namespace" . }},{{ template "kyverno.background-controller.name" . }}-metrics]'
    - '[Service,{{ include "kyverno.namespace" . }},{{ template "kyverno.cleanup-controller.name" . }}]'
    - '[Service/*,{{ include "kyverno.namespace" . }},{{ template "kyverno.cleanup-controller.name" . }}]'
    - '[Service,{{ include "kyverno.namespace" . }},{{ template "kyverno.cleanup-controller.name" . }}-metrics]'
    - '[Service/*,{{ include "kyverno.namespace" . }},{{ template "kyverno.cleanup-controller.name" . }}-metrics]'
    - '[Service,{{ include "kyverno.namespace" . }},{{ template "kyverno.reports-controller.name" . }}-metrics]'
    - '[Service/*,{{ include "kyverno.namespace" . }},{{ template "kyverno.reports-controller.name" . }}-metrics]'
    - '[ServiceMonitor,{{ if .Values.admissionController.serviceMonitor.namespace }}{{ .Values.admissionController.serviceMonitor.namespace }}{{ else }}{{ template "kyverno.namespace" . }}{{ end }},{{ template "kyverno.admission-controller.name" . }}]'
    - '[ServiceMonitor,{{ if .Values.admissionController.serviceMonitor.namespace }}{{ .Values.admissionController.serviceMonitor.namespace }}{{ else }}{{ template "kyverno.namespace" . }}{{ end }},{{ template "kyverno.background-controller.name" . }}]'
    - '[ServiceMonitor,{{ if .Values.admissionController.serviceMonitor.namespace }}{{ .Values.admissionController.serviceMonitor.namespace }}{{ else }}{{ template "kyverno.namespace" . }}{{ end }},{{ template "kyverno.cleanup-controller.name" . }}]'
    - '[ServiceMonitor,{{ if .Values.admissionController.serviceMonitor.namespace }}{{ .Values.admissionController.serviceMonitor.namespace }}{{ else }}{{ template "kyverno.namespace" . }}{{ end }},{{ template "kyverno.reports-controller.name" . }}]'
    - '[Secret,{{ include "kyverno.namespace" . }},{{ template "kyverno.admission-controller.serviceName" . }}.{{ template "kyverno.namespace" . }}.svc.*]'
    - '[Secret,{{ include "kyverno.namespace" . }},{{ template "kyverno.cleanup-controller.name" . }}.{{ template "kyverno.namespace" . }}.svc.*]'
  # -- Defines the `namespaceSelector` in the webhook configurations.
  # Note that it takes a list of `namespaceSelector` and/or `objectSelector` in the JSON format, and only the first element
  # will be forwarded to the webhook configurations.
  # The Kyverno namespace is excluded if `excludeKyvernoNamespace` is `true` (default)
  webhooks:
    # Exclude namespaces
    - namespaceSelector:
        matchExpressions:
          - key: kubernetes.io/metadata.name
            operator: NotIn
            values:
              - kube-system
  # Exclude objects
  # - objectSelector:
  #     matchExpressions:
  #     - key: webhooks.kyverno.io/exclude
  #       operator: DoesNotExist

  # -- Defines annotations to set on webhook configurations.
  webhookAnnotations:
    # Example to disable admission enforcer on AKS:
    'admissions.enforcer/disabled': 'true'
  # -- Defines labels to set on webhook configurations.
  webhookLabels: {}
  # Example to adopt webhook resources in ArgoCD:
  # 'argocd.argoproj.io/instance': 'kyverno'

  # -- Defines match conditions to set on webhook configurations (requires Kubernetes 1.27+).
  matchConditions: []
  # -- Exclude Kyverno namespace
  # Determines if default Kyverno namespace exclusion is enabled for webhooks and resourceFilters
  excludeKyvernoNamespace: true
  # -- resourceFilter namespace exclude
  # Namespaces to exclude from the default resourceFilters
  resourceFiltersExcludeNamespaces: []
  # -- resourceFilters exclude list
  # Items to exclude from config.resourceFilters
  resourceFiltersExclude: []
  # -- resourceFilter namespace include
  # Namespaces to include to the default resourceFilters
  resourceFiltersIncludeNamespaces: []
  # -- resourceFilters include list
  # Items to include to config.resourceFilters
  resourceFiltersInclude: []
# Metrics configuration
metricsConfig:
  # -- Create the configmap.
  create: true
  # -- (string) The configmap name (required if `create` is `false`).
  name: ~
  # -- Additional annotations to add to the configmap.
  annotations: {}
  namespaces:
    # -- List of namespaces to capture metrics for.
    include: []
    # -- list of namespaces to NOT capture metrics for.
    exclude: []
  # -- (string) Rate at which metrics should reset so as to clean up the memory footprint of kyverno metrics, if you might be expecting high memory footprint of Kyverno's metrics. Default: 0, no refresh of metrics. WARNING: This flag is not working since Kyverno 1.8.0
  metricsRefreshInterval: ~
  # metricsRefreshInterval: 24h

  # -- (list) Configures the bucket boundaries for all Histogram metrics, changing this configuration requires restart of the kyverno admission controller
  bucketBoundaries: [0.005, 0.01, 0.025, 0.05, 0.1, 0.25, 0.5, 1, 2.5, 5, 10, 15, 20, 25, 30]
  # -- (map) Configures the exposure of individual metrics, by default all metrics and all labels are exported, changing this configuration requires restart of the kyverno admission controller
  metricsExposure: ~
  # metricsExposure:
  #   kyverno_policy_execution_duration_seconds:
  #     disabledLabelDimensions: ["resource_kind", "resource_namespace", "resource_request_operation"]
  #     bucketBoundaries: [0.005, 0.01, 0.025, 0.05, 0.1, 0.25, 0.5, 1, 2.5]
  #   kyverno_admission_review_duration_seconds:
  #     enabled: false
# -- Image pull secrets for image verification policies, this will define the `--imagePullSecrets` argument
imagePullSecrets: {}
# regcred:
#   registry: foo.example.com
#   username: foobar
#   password: secret
# regcred2:
#   registry: bar.example.com
#   username: barbaz
#   password: secret2

# -- Existing Image pull secrets for image verification policies, this will define the `--imagePullSecrets` argument
existingImagePullSecrets:
  - private-registry
# Tests configuration
test:
  image:
    # -- (string) Image registry
    registry: registry1.dso.mil
    # -- Image repository
    repository: ironbank/redhat/ubi/ubi9-minimal
    # -- Image tag
    # Defaults to `latest` if omitted
    tag: '9.4'
    # -- (string) Image pull policy
    # Defaults to image.pullPolicy if omitted
    pullPolicy: ~
  # -- Image pull secrets
  imagePullSecrets:
    - name: private-registry
  resources:
    # -- Pod resource limits
    limits:
      cpu: 100m
      memory: 256Mi
    # -- Pod resource requests
    requests:
      cpu: 10m
      memory: 64Mi
  # -- Security context for the test pod
  podSecurityContext:
    runAsUser: 65534
    runAsGroup: 65534
    runAsNonRoot: true
  # -- Security context for the test containers
  securityContext:
    runAsUser: 65534
    runAsGroup: 65534
    runAsNonRoot: true
    privileged: false
    allowPrivilegeEscalation: false
    readOnlyRootFilesystem: true
    capabilities:
      drop:
        - ALL
    seccompProfile:
      type: RuntimeDefault
# -- Additional labels
webhooksCleanup:
  # -- Create a helm pre-delete hook to cleanup webhooks.
  enabled: true
  image:
    # -- (string) Image registry
    registry: registry1.dso.mil
    # -- Image repository
    repository: ironbank/opensource/kubernetes/kubectl
    # -- Image tag
    # Defaults to `latest` if omitted
    tag: 'v1.30.5'
    # -- (string) Image pull policy
    # Defaults to image.pullPolicy if omitted
    pullPolicy: ~
  # -- Image pull secrets
  imagePullSecrets:
    - name: private-registry
  # disable mounting serviceAccount token to the pods
  automountServiceAccountToken:
    enabled: true
  # -- Security context for the pod
  podSecurityContext:
    runAsUser: 1001
    runAsGroup: 1001
    runAsNonRoot: true
  # -- Node labels for pod assignment
  nodeSelector: {}
  # -- List of node taints to tolerate
  tolerations: []
  # -- Pod anti affinity constraints.
  podAntiAffinity: {}
  # -- Pod affinity constraints.
  podAffinity: {}
  # -- Pod labels.
  podLabels: {}
  # -- Pod annotations.
  podAnnotations: {}
  # -- Node affinity constraints.
  nodeAffinity: {}
  # -- Security context for the hook containers
  securityContext:
    runAsUser: 1001
    runAsGroup: 1001
    runAsNonRoot: true
    privileged: false
    allowPrivilegeEscalation: false
    readOnlyRootFilesystem: true
    capabilities:
      drop:
        - ALL
    seccompProfile:
      type: RuntimeDefault
  # -- Resource limits for the containers
  resources:
    limits:
      cpu: "0.5"
      memory: "256Mi"
    requests:
      cpu: "0.5"
      memory: "256Mi"
policyReportsCleanup:
  # -- Create a helm post-upgrade hook to cleanup the old policy reports.
  enabled: false
  automountServiceAccountToken:
    enabled: true
  image:
    # -- (string) Image registry
    registry: registry1.dso.mil
    # -- Image repository
    repository: ironbank/opensource/kubernetes/kubectl
    # -- Image tag
    # Defaults to `latest` if omitted
    tag: 'v1.30.5'
    # -- (string) Image pull policy
    # Defaults to image.pullPolicy if omitted
    pullPolicy: ~
  # -- Image pull secrets
  imagePullSecrets:
    - name: private-registry
  # -- Security context for the pod
  podSecurityContext:
    runAsUser: 1001
    runAsGroup: 1001
    runAsNonRoot: true
  # -- Node labels for pod assignment
  nodeSelector: {}
  # -- List of node taints to tolerate
  tolerations: []
  # -- Pod anti affinity constraints.
  podAntiAffinity: {}
  # -- Pod affinity constraints.
  podAffinity: {}
  # -- Pod labels.
  podLabels: {}
  # -- Pod annotations.
  podAnnotations: {}
  # -- Node affinity constraints.
  nodeAffinity: {}
  # -- Security context for the hook containers
  securityContext:
    runAsUser: 1001
    runAsGroup: 1001
    runAsNonRoot: true
    privileged: false
    allowPrivilegeEscalation: false
    readOnlyRootFilesystem: true
    capabilities:
      drop:
        - ALL
    seccompProfile:
      type: RuntimeDefault
  # -- Resource limits for the containers
  resources:
    limits:
      cpu: "1"
      memory: "512Mi"
    requests:
      cpu: "0.5"
      memory: "256Mi"
grafana:
  # -- Enable grafana dashboard creation.
  enabled: false
  # -- Configmap name template.
  configMapName: '{{ include "kyverno.fullname" . }}-grafana'
  # -- (string) Namespace to create the grafana dashboard configmap.
  # If not set, it will be created in the same namespace where the chart is deployed.
  namespace: ~
  # -- Grafana dashboard configmap annotations.
  annotations: {}
  # -- Grafana dashboard configmap labels
  labels:
    grafana_dashboard: "1"
  # -- create GrafanaDashboard custom resource referencing to the configMap.
  # according to https://grafana-operator.github.io/grafana-operator/docs/examples/dashboard_from_configmap/readme/
  grafanaDashboard:
    create: false
    matchLabels:
      dashboards: "grafana"
# Features configuration
features:
  admissionReports:
    # -- Enables the feature
    enabled: true
  aggregateReports:
    # -- Enables the feature
    enabled: true
  policyReports:
    # -- Enables the feature
    enabled: true
  validatingAdmissionPolicyReports:
    # -- Enables the feature
    enabled: false
  autoUpdateWebhooks:
    # -- Enables the feature
    enabled: true
  backgroundScan:
    # -- Enables the feature
    enabled: true
    # -- Number of background scan workers
    backgroundScanWorkers: 2
    # -- Background scan interval
    backgroundScanInterval: 1h
    # -- Skips resource filters in background scan
    skipResourceFilters: true
  configMapCaching:
    # -- Enables the feature
    enabled: true
  deferredLoading:
    # -- Enables the feature
    enabled: true
  dumpPayload:
    # -- Enables the feature
    enabled: false
  forceFailurePolicyIgnore:
    # -- Enables the feature
    enabled: false
  generateValidatingAdmissionPolicy:
    # -- Enables the feature
    enabled: false
  globalContext:
    # -- Maximum allowed response size from API Calls. A value of 0 bypasses checks (not recommended)
    maxApiCallResponseLength: 2000000
  logging:
    # -- Logging format
    format: text
    # -- Logging verbosity
    verbosity: 2
  omitEvents:
    # -- Events which should not be emitted (possible values `PolicyViolation`, `PolicyApplied`, `PolicyError`, and `PolicySkipped`)
    eventTypes:
      - PolicyApplied
      - PolicySkipped
      # - PolicyViolation
      # - PolicyError
  policyExceptions:
    # -- Enables the feature
    enabled: true
    # -- Restrict policy exceptions to a single namespace
    namespace: 'kyverno'
  protectManagedResources:
    # -- Enables the feature
    enabled: false
  registryClient:
    # -- Allow insecure registry
    allowInsecure: false
    # -- Enable registry client helpers
    credentialHelpers:
      - default
      - google
      - amazon
      - azure
      - github
  reports:
    # -- Reports chunk size
    chunkSize: 0
  ttlController:
    # -- Reconciliation interval for the label based cleanup manager
    reconciliationInterval: 1m
  tuf:
    # -- Enables the feature
    enabled: false
    # -- (string) Tuf root
    root: ~
    # -- (string) Tuf mirror
    mirror: ~
# Cleanup cronjobs to prevent internal resources from stacking up in the cluster
cleanupJobs:
  rbac:
    serviceAccount:
      # disable mounting serviceAccount token to the pods
      automountServiceAccountToken:
        enabled: false
  ###
  admissionReports:
    # -- Enable cleanup cronjob
    enabled: true
    # disable mounting serviceAccount token to the pods
    automountServiceAccountToken:
      enabled: true
    # -- Maximum number of retries before considering a Job as failed. Defaults to 3.
    backoffLimit: 3
    image:
      # -- (string) Image registry
      registry: registry1.dso.mil
      # -- Image repository
      repository: ironbank/opensource/kubernetes/kubectl
      # -- Image tag
      # Defaults to `latest` if omitted
      tag: 'v1.30.5'
      # -- (string) Image pull policy
      # Defaults to image.pullPolicy if omitted
      pullPolicy: ~
    # -- Image pull secrets
    imagePullSecrets:
      - name: private-registry
    # -- Cronjob schedule
    schedule: '*/10 * * * *'
    # -- Reports threshold, if number of reports are above this value the cronjob will start deleting them
    threshold: 10000
    # -- Cronjob history
    history:
      success: 1
      failure: 1
    # -- Security context for the pod
    podSecurityContext:
      runAsUser: 1000
      runAsGroup: 1000
      runAsNonRoot: true
    # -- Security context for the containers
    securityContext:
      runAsUser: 1000
      runAsGroup: 1000
      runAsNonRoot: true
      privileged: false
      allowPrivilegeEscalation: false
      readOnlyRootFilesystem: true
      capabilities:
        drop:
          - ALL
      seccompProfile:
        type: RuntimeDefault
    # -- Pod PriorityClassName
    priorityClassName: ""
    # -- Job resources
    resources: {}
    # -- List of node taints to tolerate
    tolerations: []
    # -- Node labels for pod assignment
    nodeSelector: {}
    # -- Pod Annotations
    podAnnotations: {}
    # -- Pod labels
    podLabels: {}
    # -- Pod anti affinity constraints.
    podAntiAffinity: {}
    # -- Pod affinity constraints.
    podAffinity: {}
    # -- Node affinity constraints.
    nodeAffinity: {}
  clusterAdmissionReports:
    # -- Enable cleanup cronjob
    enabled: true
    # disable mounting serviceAccount token to the pods
    automountServiceAccountToken:
      enabled: true
    # -- Maximum number of retries before considering a Job as failed. Defaults to 3.
    backoffLimit: 3
    image:
      # -- (string) Image registry
      registry: registry1.dso.mil
      # -- Image repository
      repository: ironbank/opensource/kubernetes/kubectl
      # -- Image tag
      # Defaults to `latest` if omitted
      tag: 'v1.30.5'
      # -- (string) Image pull policy
      # Defaults to image.pullPolicy if omitted
      pullPolicy: ~
    # -- Image pull secrets
    imagePullSecrets:
      - name: private-registry
    # -- Cronjob schedule
    schedule: '*/10 * * * *'
    # -- Reports threshold, if number of reports are above this value the cronjob will start deleting them
    threshold: 10000
    # -- Cronjob history
    history:
      success: 1
      failure: 1
    # -- Security context for the pod
    podSecurityContext:
      runAsUser: 1000
      runAsGroup: 1000
      runAsNonRoot: true
    # -- Security context for the containers
    securityContext:
      runAsUser: 1000
      runAsGroup: 1000
      runAsNonRoot: true
      privileged: false
      allowPrivilegeEscalation: false
      readOnlyRootFilesystem: true
      capabilities:
        drop:
          - ALL
      seccompProfile:
        type: RuntimeDefault
    # -- Pod PriorityClassName
    priorityClassName: ""
    # -- Job resources
    resources: {}
    # -- List of node taints to tolerate
    tolerations: []
    # -- Node labels for pod assignment
    nodeSelector: {}
    # -- Pod Annotations
    podAnnotations: {}
    # -- Pod Labels
    podLabels: {}
    # -- Pod anti affinity constraints.
    podAntiAffinity: {}
    # -- Pod affinity constraints.
    podAffinity: {}
    # -- Node affinity constraints.
    nodeAffinity: {}
  updateRequests:
    # -- Enable cleanup cronjob
    enabled: true
    automountServiceAccountToken:
      enabled: true
    # -- Maximum number of retries before considering a Job as failed. Defaults to 3.
    backoffLimit: 3
    # -- Time until the pod from the cronjob is deleted
    ttlSecondsAfterFinished: ""
    image:
      # -- (string) Image registry
      registry: registry1.dso.mil
      # -- Image repository
      repository: ironbank/opensource/kubernetes/kubectl
      # -- Image tag
      # Defaults to `latest` if omitted
      tag: 'v1.30.5'
      # -- (string) Image pull policy
      # Defaults to image.pullPolicy if omitted
      pullPolicy: ~
    # -- Image pull secrets
    imagePullSecrets:
      - name: private-registry
    # -- Cronjob schedule
    schedule: '*/10 * * * *'
    # -- Reports threshold, if number of updateRequests are above this value the cronjob will start deleting them
    threshold: 10000
    # -- Cronjob history
    history:
      success: 1
      failure: 1
    # -- Security context for the pod
    podSecurityContext:
      runAsUser: 1000
      runAsGroup: 1000
      runAsNonRoot: true
    # -- Security context for the containers
    securityContext:
      runAsNonRoot: true
      privileged: false
      allowPrivilegeEscalation: false
      readOnlyRootFilesystem: true
      capabilities:
        drop:
          - ALL
      seccompProfile:
        type: RuntimeDefault
    # -- Pod PriorityClassName
    priorityClassName: ""
    # -- Job resources
    resources: {}
    # -- List of node taints to tolerate
    tolerations: []
    # -- Node labels for pod assignment
    nodeSelector: {}
    # -- Pod Annotations
    podAnnotations: {}
    # -- Pod labels
    podLabels: {}
    # -- Pod anti affinity constraints.
    podAntiAffinity: {}
    # -- Pod affinity constraints.
    podAffinity: {}
    # -- Node affinity constraints.
    nodeAffinity: {}
  ephemeralReports:
    # -- Enable cleanup cronjob
    enabled: true
    automountServiceAccountToken:
      enabled: true
    # -- Maximum number of retries before considering a Job as failed. Defaults to 3.
    backoffLimit: 3
    # -- Time until the pod from the cronjob is deleted
    ttlSecondsAfterFinished: ""
    image:
      # -- (string) Image registry
      registry: registry1.dso.mil
      # -- Image repository
      repository: ironbank/opensource/kubernetes/kubectl
      # -- Image tag
      # Defaults to `latest` if omitted
      tag: 'v1.30.5'
      # -- (string) Image pull policy
      # Defaults to image.pullPolicy if omitted
      pullPolicy: ~
    # -- Image pull secrets
    imagePullSecrets:
      - name: private-registry
    # -- Cronjob schedule
    schedule: '*/10 * * * *'
    # -- Reports threshold, if number of updateRequests are above this value the cronjob will start deleting them
    threshold: 10000
    # -- Cronjob history
    history:
      success: 1
      failure: 1
    # -- Security context for the pod
    podSecurityContext:
      runAsUser: 1001
      runAsGroup: 1001
      runAsNonRoot: true
    # -- Security context for the containers
    securityContext:
      runAsNonRoot: true
      privileged: false
      allowPrivilegeEscalation: false
      readOnlyRootFilesystem: true
      capabilities:
        drop:
          - ALL
      seccompProfile:
        type: RuntimeDefault
    # -- Pod PriorityClassName
    priorityClassName: ""
    # -- Job resources
    resources: {}
    # -- List of node taints to tolerate
    tolerations: []
    # -- Node labels for pod assignment
    nodeSelector: {}
    # -- Pod Annotations
    podAnnotations: {}
    # -- Pod labels
    podLabels: {}
    # -- Pod anti affinity constraints.
    podAntiAffinity: {}
    # -- Pod affinity constraints.
    podAffinity: {}
    # -- Node affinity constraints.
    nodeAffinity: {}
  clusterEphemeralReports:
    # -- Enable cleanup cronjob
    enabled: true
    automountServiceAccountToken:
      enabled: true
    # -- Maximum number of retries before considering a Job as failed. Defaults to 3.
    backoffLimit: 3
    # -- Time until the pod from the cronjob is deleted
    ttlSecondsAfterFinished: ""
    image:
      # -- (string) Image registry
      registry: registry1.dso.mil
      # -- Image repository
      repository: ironbank/opensource/kubernetes/kubectl
      # -- Image tag
      # Defaults to `latest` if omitted
      tag: 'v1.30.5'
      # -- (string) Image pull policy
      # Defaults to image.pullPolicy if omitted
      pullPolicy: ~
    # -- Image pull secrets
    imagePullSecrets:
      - name: private-registry
    # -- Cronjob schedule
    schedule: '*/10 * * * *'
    # -- Reports threshold, if number of reports are above this value the cronjob will start deleting them
    threshold: 10000
    # -- Cronjob history
    history:
      success: 1
      failure: 1
    # -- Security context for the pod
    podSecurityContext:
      runAsUser: 1001
      runAsGroup: 1001
      runAsNonRoot: true
    # -- Security context for the containers
    securityContext:
      runAsNonRoot: true
      privileged: false
      allowPrivilegeEscalation: false
      readOnlyRootFilesystem: true
      capabilities:
        drop:
          - ALL
      seccompProfile:
        type: RuntimeDefault
    # -- Pod PriorityClassName
    priorityClassName: ""
    # -- Job resources
    resources: {}
    # -- List of node taints to tolerate
    tolerations: []
    # -- Node labels for pod assignment
    nodeSelector: {}
    # -- Pod Annotations
    podAnnotations: {}
    # -- Pod Labels
    podLabels: {}
    # -- Pod anti affinity constraints.
    podAntiAffinity: {}
    # -- Pod affinity constraints.
    podAffinity: {}
    # -- Node affinity constraints.
    nodeAffinity: {}
# Admission controller configuration
admissionController:
  # -- Overrides features defined at the root level
  featuresOverride:
    admissionReports:
      # -- Max number of admission reports allowed in flight until the admission controller stops creating new ones
      backPressureThreshold: 1000

  rbac:
    # -- Create RBAC resources
    create: true
    serviceAccount:
      # -- The ServiceAccount name
      name:
      # -- Annotations for the ServiceAccount
      annotations: {}
      # example.com/annotation: value

      # disable mounting serviceAccount token to the pods
      automountServiceAccountToken:
        enabled: false
    deployment:
      # disable mounting serviceAccount token to the pods
      automountServiceAccountToken:
        enabled: true
    coreClusterRole:
      # -- Extra resource permissions to add in the core cluster role.
      # This was introduced to avoid breaking change in the chart but should ideally be moved in `clusterRole.extraResources`.
      # @default -- See [values.yaml](values.yaml)
      extraResources:
        - apiGroups:
            - '*'
          resources:
            - '*'
          verbs:
            - get
            - list
            - watch
    clusterRole:
      # -- Extra resource permissions to add in the cluster role
      extraResources: []
      # - apiGroups:
      #     - ''
      #   resources:
      #     - pods
      #   verbs:
      #     - create
      #     - update
      #     - delete
  # -- Create self-signed certificates at deployment time.
  # The certificates won't be automatically renewed if this is set to `true`.
  createSelfSignedCert: false
  # -- (int) Desired number of pods
  replicas: 3
  # -- Additional labels to add to each pod
  podLabels: {}
  # example.com/label: foo

  # -- Additional annotations to add to each pod
  podAnnotations: {}
  # example.com/annotation: foo

  # -- Deployment update strategy.
  # Ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
  # @default -- See [values.yaml](values.yaml)
  updateStrategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 40%
    type: RollingUpdate
  # -- Optional priority class
  priorityClassName: ''
  # -- Change `apiPriorityAndFairness` to `true` if you want to insulate the API calls made by Kyverno admission controller activities.
  # This will help ensure Kyverno stability in busy clusters.
  # Ref: https://kubernetes.io/docs/concepts/cluster-administration/flow-control/
  apiPriorityAndFairness: false
  # -- Priority level configuration.
  # The block is directly forwarded into the priorityLevelConfiguration, so you can use whatever specification you want.
  # ref: https://kubernetes.io/docs/concepts/cluster-administration/flow-control/#prioritylevelconfiguration
  # @default -- See [values.yaml](values.yaml)
  priorityLevelConfigurationSpec:
    type: Limited
    limited:
      nominalConcurrencyShares: 10
      limitResponse:
        queuing:
          queueLengthLimit: 50
        type: Queue
  # -- Change `hostNetwork` to `true` when you want the pod to share its host's network namespace.
  # Useful for situations like when you end up dealing with a custom CNI over Amazon EKS.
  # Update the `dnsPolicy` accordingly as well to suit the host network mode.
  hostNetwork: false
  # -- admissionController webhook server port
  # in case you are using hostNetwork: true, you might want to change the port the webhookServer is listening to
  webhookServer:
    port: 9443
  # -- `dnsPolicy` determines the manner in which DNS resolution happens in the cluster.
  # In case of `hostNetwork: true`, usually, the `dnsPolicy` is suitable to be `ClusterFirstWithHostNet`.
  # For further reference: https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/#pod-s-dns-policy.
  dnsPolicy: ClusterFirst
  # -- Startup probe.
  # The block is directly forwarded into the deployment, so you can use whatever startupProbes configuration you want.
  # ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/
  # @default -- See [values.yaml](values.yaml)
  startupProbe:
    httpGet:
      path: /health/liveness
      port: 9443
      scheme: HTTPS
    failureThreshold: 20
    initialDelaySeconds: 2
    periodSeconds: 6
  # -- Liveness probe.
  # The block is directly forwarded into the deployment, so you can use whatever livenessProbe configuration you want.
  # ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/
  # @default -- See [values.yaml](values.yaml)
  livenessProbe:
    httpGet:
      path: /health/liveness
      port: 9443
      scheme: HTTPS
    initialDelaySeconds: 15
    periodSeconds: 30
    timeoutSeconds: 5
    failureThreshold: 2
    successThreshold: 1
  # -- Readiness Probe.
  # The block is directly forwarded into the deployment, so you can use whatever readinessProbe configuration you want.
  # ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/
  # @default -- See [values.yaml](values.yaml)
  readinessProbe:
    httpGet:
      path: /health/readiness
      port: 9443
      scheme: HTTPS
    initialDelaySeconds: 5
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
  # -- Node labels for pod assignment
  nodeSelector: {}
  # -- List of node taints to tolerate
  tolerations: []
  antiAffinity:
    # -- Pod antiAffinities toggle.
    # Enabled by default but can be disabled if you want to schedule pods to the same node.
    enabled: true
  # -- Pod anti affinity constraints.
  # @default -- See [values.yaml](values.yaml)
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 1
        podAffinityTerm:
          labelSelector:
            matchExpressions:
              - key: app.kubernetes.io/component
                operator: In
                values:
                  - admission-controller
          topologyKey: kubernetes.io/hostname
  # -- Pod affinity constraints.
  podAffinity: {}
  # -- Node affinity constraints.
  nodeAffinity: {}
  # -- Topology spread constraints.
  topologySpreadConstraints: []
  # -- Security context for the pod
  podSecurityContext:
    runAsUser: 10001
    runAsGroup: 10001
    runAsNonRoot: true
  podDisruptionBudget:
    # -- Enable PodDisruptionBudget.
    # Will always be enabled if replicas > 1. This non-declarative behavior should ideally be avoided, but changing it now would be breaking.
    enabled: false
    # -- Configures the minimum available pods for disruptions.
    # Cannot be used if `maxUnavailable` is set.
    minAvailable: 1
    # -- Configures the maximum unavailable pods for disruptions.
    # Cannot be used if `minAvailable` is set.
    maxUnavailable:
  # -- A writable volume to use for the TUF root initialization.
  tufRootMountPath: /.sigstore
  # -- Volume to be mounted in pods for TUF/cosign work.
  sigstoreVolume:
    emptyDir: {}
  caCertificates:
    # -- CA certificates to use with Kyverno deployments
    # This value is expected to be one large string of CA certificates
    data: ~
    # -- Volume to be mounted for CA certificates
    # Not used when `.Values.admissionController.caCertificates.data` is defined
    volume: {}
    # Example to use hostPath:
    # hostPath:
    #   path: /etc/pki/tls/ca-certificates.crt
    #   type: File
  # -- Image pull secrets
  imagePullSecrets:
    - name: private-registry
  initContainer:
    image:
      # -- Image registry
      registry: registry1.dso.mil
      # -- Image repository
      repository: ironbank/opensource/kyverno/kyvernopre
      # -- (string) Image tag
      # If missing, defaults to image.tag
      tag: 'v1.12.6'
      # -- (string) Image pull policy
      # If missing, defaults to image.pullPolicy
      pullPolicy: ~
    resources:
      # -- Pod resource limits
      limits:
        cpu: 100m
        memory: 256Mi
      # -- Pod resource requests
      requests:
        cpu: 10m
        memory: 64Mi
    # -- Container security context
    securityContext:
      runAsNonRoot: true
      runAsUser: 10001
      runAsGroup: 10001
      privileged: false
      allowPrivilegeEscalation: false
      readOnlyRootFilesystem: true
      capabilities:
        drop:
          - ALL
      seccompProfile:
        type: RuntimeDefault
    # -- Additional container args.
    extraArgs: {}
    # -- Additional container environment variables.
    extraEnvVars: []
    # Example setting proxy
    # extraEnvVars:
    # - name: HTTPS_PROXY
    #   value: 'https://proxy.example.com:3128'
  container:
    image:
      # -- Image registry
      registry: registry1.dso.mil
      # -- Image repository
      repository: ironbank/opensource/kyverno
      # -- (string) Image tag
      # Defaults to appVersion in Chart.yaml if omitted
      tag: 'v1.12.6'
      # -- Image pull policy
      pullPolicy: IfNotPresent
    # -- Image pull secrets
    imagePullSecrets:
      - name: private-registry
    resources:
      # -- Pod resource limits
      limits:
        cpu: 500m
        memory: 512Mi
      # -- Pod resource requests
      requests:
        cpu: 500m
        memory: 512Mi
    # -- Container security context
    securityContext:
      runAsNonRoot: true
      runAsUser: 10001
      runAsGroup: 10001
      privileged: false
      allowPrivilegeEscalation: false
      readOnlyRootFilesystem: true
      capabilities:
        drop:
          - ALL
      seccompProfile:
        type: RuntimeDefault
    # -- Additional container args.
    extraArgs: {}
    # -- Additional container environment variables.
    extraEnvVars: []
    # Example setting proxy
    # extraEnvVars:
    # - name: HTTPS_PROXY
    #   value: 'https://proxy.example.com:3128'
  # -- Array of extra init containers
  extraInitContainers: []
  # - name: init-container
  #   image: busybox
  #   command: ['sh', '-c', 'echo Hello']

  # -- Array of extra containers to run alongside kyverno
  extraContainers: []
  # - name: myapp-container
  #   image: busybox
  #   command: ['sh', '-c', 'echo Hello && sleep 3600']

  service:
    # -- Service port.
    port: 443
    # -- Service type.
    type: ClusterIP
    # -- Service node port.
    # Only used if `type` is `NodePort`.
    nodePort:
    # -- Service annotations.
    annotations: {}
  metricsService:
    # -- Create service.
    create: true
    # -- Service port.
    # Kyverno's metrics server will be exposed at this port.
    port: 8000
    # -- Service type.
    type: ClusterIP
    # -- Service node port.
    # Only used if `type` is `NodePort`.
    nodePort:
    # -- Service annotations.
    annotations: {}
  networkPolicy:
    # -- When true, use a NetworkPolicy to allow ingress to the webhook
    # This is useful on clusters using Calico and/or native k8s network policies in a default-deny setup.
    enabled: false
    # -- A list of valid from selectors according to https://kubernetes.io/docs/concepts/services-networking/network-policies.
    ingressFrom: []
  serviceMonitor:
    # -- Create a `ServiceMonitor` to collect Prometheus metrics.
    enabled: false
    # -- Additional labels
    additionalLabels: {}
    # -- (string) Override namespace
    namespace: ~
    # --  Interval to scrape metrics
    interval: 30s
    # -- Timeout if metrics can't be retrieved in given time interval
    scrapeTimeout: 25s
    # -- Is TLS required for endpoint
    secure: false
    # -- TLS Configuration for endpoint
    tlsConfig: {}
    # -- RelabelConfigs to apply to samples before scraping
    relabelings: []
    # -- MetricRelabelConfigs to apply to samples before ingestion.
    metricRelabelings: []
  tracing:
    # -- Enable tracing
    enabled: false
    # -- Traces receiver address
    address:
    # -- Traces receiver port
    port:
    # -- Traces receiver credentials
    creds: ''
  metering:
    # -- Disable metrics export
    disabled: false
    # -- Otel configuration, can be `prometheus` or `grpc`
    config: prometheus
    # -- Prometheus endpoint port
    port: 8000
    # -- Otel collector endpoint
    collector: ''
    # -- Otel collector credentials
    creds: ''
  profiling:
    # -- Enable profiling
    enabled: false
    # -- Profiling endpoint port
    port: 6060
    # -- Service type.
    serviceType: ClusterIP
    # -- Service node port.
    # Only used if `type` is `NodePort`.
    nodePort:
# Background controller configuration
backgroundController:
  # -- Overrides features defined at the root level
  featuresOverride: {}
  # -- Enable background controller.
  enabled: true
  rbac:
    # -- Create RBAC resources
    create: true
    serviceAccount:
      # -- Service account name
      name:
      # -- Annotations for the ServiceAccount
      annotations: {}
      # example.com/annotation: value

      # disable mounting serviceAccount token to the pods
      automountServiceAccountToken:
        enabled: false
    deployment:
      # disable mounting serviceAccount token to the pods
      automountServiceAccountToken:
        enabled: true
    coreClusterRole:
      # -- Extra resource permissions to add in the core cluster role.
      # This was introduced to avoid breaking change in the chart but should ideally be moved in `clusterRole.extraResources`.
      # @default -- See [values.yaml](values.yaml)
      extraResources:
        - apiGroups:
            - '*'
          resources:
            - '*'
          verbs:
            - get
            - list
            - watch
        - apiGroups:
            - networking.k8s.io
          resources:
            - ingresses
            - ingressclasses
            - networkpolicies
          verbs:
            - create
            - update
            - patch
            - delete
        - apiGroups:
            - rbac.authorization.k8s.io
          resources:
            - rolebindings
            - roles
          verbs:
            - create
            - update
            - patch
            - delete
        - apiGroups:
            - ''
          resources:
            - configmaps
            - secrets
            - resourcequotas
            - limitranges
          verbs:
            - create
            - update
            - patch
            - delete
        - apiGroups:
            - ''
          resources:
            - serviceaccounts
          verbs:
            - get
            - list
            - watch
            - update
            - patch
    clusterRole:
      # -- Extra resource permissions to add in the cluster role
      extraResources: []
      # - apiGroups:
      #     - ''
      #   resources:
      #     - pods
      #   verbs:
      #     - create
      #     - update
      #     - delete
      #     - patch
  image:
    # -- Image registry
    registry: registry1.dso.mil
    # -- Image repository
    repository: ironbank/opensource/kyverno/kyverno/background-controller
    # -- Image tag
    # Defaults to appVersion in Chart.yaml if omitted
    tag: 'v1.12.6'
    # -- Image pull policy
    pullPolicy: IfNotPresent
  # -- Image pull secrets
  imagePullSecrets:
    - name: private-registry
  # -- (int) Desired number of pods
  replicas: ~
  # -- The number of revisions to keep
  revisionHistoryLimit: 10
  # -- Additional labels to add to each pod
  podLabels: {}
  # example.com/label: foo

  # -- Additional annotations to add to each pod
  podAnnotations: {}
  # example.com/annotation: foo

  # -- Deployment update strategy.
  # Ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
  # @default -- See [values.yaml](values.yaml)
  updateStrategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 40%
    type: RollingUpdate
  # -- Optional priority class
  priorityClassName: ''
  # -- Change `hostNetwork` to `true` when you want the pod to share its host's network namespace.
  # Useful for situations like when you end up dealing with a custom CNI over Amazon EKS.
  # Update the `dnsPolicy` accordingly as well to suit the host network mode.
  hostNetwork: false
  # -- `dnsPolicy` determines the manner in which DNS resolution happens in the cluster.
  # In case of `hostNetwork: true`, usually, the `dnsPolicy` is suitable to be `ClusterFirstWithHostNet`.
  # For further reference: https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/#pod-s-dns-policy.
  dnsPolicy: ClusterFirst
  # -- Extra arguments passed to the container on the command line
  extraArgs: {}
  # -- Additional container environment variables.
  extraEnvVars: []
  # Example setting proxy
  # extraEnvVars:
  # - name: HTTPS_PROXY
  #   value: 'https://proxy.example.com:3128'

  resources:
    # -- Pod resource limits
    limits:
      memory: 128Mi
    # -- Pod resource requests
    requests:
      cpu: 100m
      memory: 64Mi
  # -- Node labels for pod assignment
  nodeSelector: {}
  # -- List of node taints to tolerate
  tolerations: []
  antiAffinity:
    # -- Pod antiAffinities toggle.
    # Enabled by default but can be disabled if you want to schedule pods to the same node.
    enabled: true
  # -- Pod anti affinity constraints.
  # @default -- See [values.yaml](values.yaml)
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 1
        podAffinityTerm:
          labelSelector:
            matchExpressions:
              - key: app.kubernetes.io/component
                operator: In
                values:
                  - background-controller
          topologyKey: kubernetes.io/hostname
  # -- Pod affinity constraints.
  podAffinity: {}
  # -- Node affinity constraints.
  nodeAffinity: {}
  # -- Topology spread constraints.
  topologySpreadConstraints: []
  # -- Security context for the pod
  podSecurityContext:
    runAsUser: 1000
    runAsGroup: 1000
    runAsNonRoot: true
  # -- Security context for the containers
  securityContext:
    runAsNonRoot: true
    runAsUser: 1000
    runAsGroup: 1000
    privileged: false
    allowPrivilegeEscalation: false
    readOnlyRootFilesystem: true
    capabilities:
      drop:
        - ALL
    seccompProfile:
      type: RuntimeDefault
  podDisruptionBudget:
    # -- Enable PodDisruptionBudget.
    # Will always be enabled if replicas > 1. This non-declarative behavior should ideally be avoided, but changing it now would be breaking.
    enabled: false
    # -- Configures the minimum available pods for disruptions.
    # Cannot be used if `maxUnavailable` is set.
    minAvailable: 1
    # -- Configures the maximum unavailable pods for disruptions.
    # Cannot be used if `minAvailable` is set.
    maxUnavailable:
  caCertificates:
    # -- CA certificates to use with Kyverno deployments
    # This value is expected to be one large string of CA certificates
    data: ~
    # -- Volume to be mounted for CA certificates
    # Not used when `.Values.backgroundController.caCertificates.data` is defined
    volume: {}
    # Example to use hostPath:
    # hostPath:
    #   path: /etc/pki/tls/ca-certificates.crt
    #   type: File
  metricsService:
    # -- Create service.
    create: true
    # -- Service port.
    # Metrics server will be exposed at this port.
    port: 8000
    # -- Service type.
    type: ClusterIP
    # -- Service node port.
    # Only used if `metricsService.type` is `NodePort`.
    nodePort:
    # -- Service annotations.
    annotations: {}
  networkPolicy:
    # -- When true, use a NetworkPolicy to allow ingress to the webhook
    # This is useful on clusters using Calico and/or native k8s network policies in a default-deny setup.
    enabled: false
    # -- A list of valid from selectors according to https://kubernetes.io/docs/concepts/services-networking/network-policies.
    ingressFrom: []
  serviceMonitor:
    # -- Create a `ServiceMonitor` to collect Prometheus metrics.
    enabled: false
    # -- Additional labels
    additionalLabels: {}
    # -- (string) Override namespace
    namespace: ~
    # --  Interval to scrape metrics
    interval: 30s
    # -- Timeout if metrics can't be retrieved in given time interval
    scrapeTimeout: 25s
    # -- Is TLS required for endpoint
    secure: false
    # -- TLS Configuration for endpoint
    tlsConfig: {}
    # -- RelabelConfigs to apply to samples before scraping
    relabelings: []
    # -- MetricRelabelConfigs to apply to samples before ingestion.
    metricRelabelings: []
  tracing:
    # -- Enable tracing
    enabled: false
    # -- Traces receiver address
    address:
    # -- Traces receiver port
    port:
    # -- Traces receiver credentials
    creds: ''
  metering:
    # -- Disable metrics export
    disabled: false
    # -- Otel configuration, can be `prometheus` or `grpc`
    config: prometheus
    # -- Prometheus endpoint port
    port: 8000
    # -- Otel collector endpoint
    collector: ''
    # -- Otel collector credentials
    creds: ''
  profiling:
    # -- Enable profiling
    enabled: false
    # -- Profiling endpoint port
    port: 6060
    # -- Service type.
    serviceType: ClusterIP
    # -- Service node port.
    # Only used if `type` is `NodePort`.
    nodePort:
# Cleanup controller configuration
cleanupController:
  # -- Overrides features defined at the root level
  featuresOverride: {}
  # -- Enable cleanup controller.
  enabled: true
  rbac:
    # -- Create RBAC resources
    create: true
    serviceAccount:
      # -- Service account name
      name:
      # -- Annotations for the ServiceAccount
      annotations: {}
      # example.com/annotation: value

      # disable mounting serviceAccount token to the pods
      automountServiceAccountToken:
        enabled: false
    deployment:
      # disable mounting serviceAccount token to the pods
      automountServiceAccountToken:
        enabled: true
    clusterRole:
      # -- Extra resource permissions to add in the cluster role
      extraResources: []
      # - apiGroups:
      #     - ''
      #   resources:
      #     - pods
      #   verbs:
      #     - delete
      #     - list
      #     - watch
  # -- Create self-signed certificates at deployment time.
  # The certificates won't be automatically renewed if this is set to `true`.
  createSelfSignedCert: false
  image:
    # -- Image registry
    registry: registry1.dso.mil
    # -- Image repository
    repository: ironbank/opensource/kyverno/kyverno/cleanup-controller
    # -- (string) Image tag
    # Defaults to appVersion in Chart.yaml if omitted
    tag: 'v1.12.6'
    # -- Image pull policy
    pullPolicy: IfNotPresent
  # -- Image pull secrets
  imagePullSecrets:
    - name: private-registry
  # -- (int) Desired number of pods
  replicas: ~
  # -- The number of revisions to keep
  revisionHistoryLimit: 10
  # -- Additional labels to add to each pod
  podLabels: {}
  # example.com/label: foo

  # -- Additional annotations to add to each pod
  podAnnotations: {}
  # example.com/annotation: foo

  # -- Deployment update strategy.
  # Ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
  # @default -- See [values.yaml](values.yaml)
  updateStrategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 40%
    type: RollingUpdate
  # -- Optional priority class
  priorityClassName: ''
  # -- Change `hostNetwork` to `true` when you want the pod to share its host's network namespace.
  # Useful for situations like when you end up dealing with a custom CNI over Amazon EKS.
  # Update the `dnsPolicy` accordingly as well to suit the host network mode.
  hostNetwork: false
  # -- cleanupController server port
  # in case you are using hostNetwork: true, you might want to change the port the cleanupController is listening to
  server:
    port: 9443
  # -- cleanupController webhook server port
  # in case you are using hostNetwork: true, you might want to change the port the webhookServer is listening to
  webhookServer:
    port: 9443
  # -- `dnsPolicy` determines the manner in which DNS resolution happens in the cluster.
  # In case of `hostNetwork: true`, usually, the `dnsPolicy` is suitable to be `ClusterFirstWithHostNet`.
  # For further reference: https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/#pod-s-dns-policy.
  dnsPolicy: ClusterFirst
  # -- Extra arguments passed to the container on the command line
  extraArgs: {}
  # -- Additional container environment variables.
  extraEnvVars: []
  # Example setting proxy
  # extraEnvVars:
  # - name: HTTPS_PROXY
  #   value: 'https://proxy.example.com:3128'

  resources:
    # -- Pod resource limits
    limits:
      memory: 128Mi
    # -- Pod resource requests
    requests:
      cpu: 100m
      memory: 64Mi
  # -- Startup probe.
  # The block is directly forwarded into the deployment, so you can use whatever startupProbes configuration you want.
  # ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/
  # @default -- See [values.yaml](values.yaml)
  startupProbe:
    httpGet:
      path: /health/liveness
      port: 9443
      scheme: HTTPS
    failureThreshold: 20
    initialDelaySeconds: 2
    periodSeconds: 6
  # -- Liveness probe.
  # The block is directly forwarded into the deployment, so you can use whatever livenessProbe configuration you want.
  # ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/
  # @default -- See [values.yaml](values.yaml)
  livenessProbe:
    httpGet:
      path: /health/liveness
      port: 9443
      scheme: HTTPS
    initialDelaySeconds: 15
    periodSeconds: 30
    timeoutSeconds: 5
    failureThreshold: 2
    successThreshold: 1
  # -- Readiness Probe.
  # The block is directly forwarded into the deployment, so you can use whatever readinessProbe configuration you want.
  # ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/
  # @default -- See [values.yaml](values.yaml)
  readinessProbe:
    httpGet:
      path: /health/readiness
      port: 9443
      scheme: HTTPS
    initialDelaySeconds: 5
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
  # -- Node labels for pod assignment
  nodeSelector: {}
  # -- List of node taints to tolerate
  tolerations: []
  antiAffinity:
    # -- Pod antiAffinities toggle.
    # Enabled by default but can be disabled if you want to schedule pods to the same node.
    enabled: true
  # -- Pod anti affinity constraints.
  # @default -- See [values.yaml](values.yaml)
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 1
        podAffinityTerm:
          labelSelector:
            matchExpressions:
              - key: app.kubernetes.io/component
                operator: In
                values:
                  - cleanup-controller
          topologyKey: kubernetes.io/hostname
  # -- Pod affinity constraints.
  podAffinity: {}
  # -- Node affinity constraints.
  nodeAffinity: {}
  # -- Topology spread constraints.
  topologySpreadConstraints: []
  # -- Security context for the pod
  podSecurityContext:
    runAsUser: 1000
    runAsGroup: 1000
    runAsNonRoot: true
  # -- Security context for the containers
  securityContext:
    runAsUser: 1000
    runAsGroup: 1000
    runAsNonRoot: true
    privileged: false
    allowPrivilegeEscalation: false
    readOnlyRootFilesystem: true
    capabilities:
      drop:
        - ALL
    seccompProfile:
      type: RuntimeDefault
  podDisruptionBudget:
    # -- Enable PodDisruptionBudget.
    # Will always be enabled if replicas > 1. This non-declarative behavior should ideally be avoided, but changing it now would be breaking.
    enabled: false
    # -- Configures the minimum available pods for disruptions.
    # Cannot be used if `maxUnavailable` is set.
    minAvailable: 1
    # -- Configures the maximum unavailable pods for disruptions.
    # Cannot be used if `minAvailable` is set.
    maxUnavailable:
  service:
    # -- Service port.
    port: 443
    # -- Service type.
    type: ClusterIP
    # -- Service node port.
    # Only used if `service.type` is `NodePort`.
    nodePort:
    # -- Service annotations.
    annotations: {}
  metricsService:
    # -- Create service.
    create: true
    # -- Service port.
    # Metrics server will be exposed at this port.
    port: 8000
    # -- Service type.
    type: ClusterIP
    # -- Service node port.
    # Only used if `metricsService.type` is `NodePort`.
    nodePort:
    # -- Service annotations.
    annotations: {}
  networkPolicy:
    # -- When true, use a NetworkPolicy to allow ingress to the webhook
    # This is useful on clusters using Calico and/or native k8s network policies in a default-deny setup.
    enabled: false
    # -- A list of valid from selectors according to https://kubernetes.io/docs/concepts/services-networking/network-policies.
    ingressFrom: []
  serviceMonitor:
    # -- Create a `ServiceMonitor` to collect Prometheus metrics.
    enabled: false
    # -- Additional labels
    additionalLabels: {}
    # -- (string) Override namespace
    namespace: ~
    # --  Interval to scrape metrics
    interval: 30s
    # -- Timeout if metrics can't be retrieved in given time interval
    scrapeTimeout: 25s
    # -- Is TLS required for endpoint
    secure: false
    # -- TLS Configuration for endpoint
    tlsConfig: {}
    # -- RelabelConfigs to apply to samples before scraping
    relabelings: []
    # -- MetricRelabelConfigs to apply to samples before ingestion.
    metricRelabelings: []
  tracing:
    # -- Enable tracing
    enabled: false
    # -- Traces receiver address
    address:
    # -- Traces receiver port
    port:
    # -- Traces receiver credentials
    creds: ''
  metering:
    # -- Disable metrics export
    disabled: false
    # -- Otel configuration, can be `prometheus` or `grpc`
    config: prometheus
    # -- Prometheus endpoint port
    port: 8000
    # -- Otel collector endpoint
    collector: ''
    # -- Otel collector credentials
    creds: ''
  profiling:
    # -- Enable profiling
    enabled: false
    # -- Profiling endpoint port
    port: 6060
    # -- Service type.
    serviceType: ClusterIP
    # -- Service node port.
    # Only used if `type` is `NodePort`.
    nodePort:
# Reports controller configuration
reportsController:
  # -- Overrides features defined at the root level
  featuresOverride: {}
  # -- Enable reports controller.
  enabled: true
  rbac:
    # -- Create RBAC resources
    create: true
    serviceAccount:
      # -- Service account name
      name:
      # -- Annotations for the ServiceAccount
      annotations: {}
      # example.com/annotation: value

      # disable mounting serviceAccount token to the pods
      automountServiceAccountToken:
        enabled: false
    deployment:
      # disable mounting serviceAccount token to the pods
      automountServiceAccountToken:
        enabled: true
    coreClusterRole:
      # -- Extra resource permissions to add in the core cluster role.
      # This was introduced to avoid breaking change in the chart but should ideally be moved in `clusterRole.extraResources`.
      # @default -- See [values.yaml](values.yaml)
      extraResources:
        - apiGroups:
            - '*'
          resources:
            - '*'
          verbs:
            - get
            - list
            - watch
    clusterRole:
      # -- Extra resource permissions to add in the cluster role
      extraResources: []
      # - apiGroups:
      #     - ''
      #   resources:
      #     - pods
  image:
    # -- Image registry
    registry: registry1.dso.mil
    # -- Image repository
    repository: ironbank/opensource/kyverno/kyverno/reports-controller
    # -- (string) Image tag
    # Defaults to appVersion in Chart.yaml if omitted
    tag: 'v1.12.6'
    # -- Image pull policy
    pullPolicy: IfNotPresent
  # -- Image pull secrets
  imagePullSecrets:
    - name: private-registry
  # -- (int) Desired number of pods
  replicas: ~
  # -- The number of revisions to keep
  revisionHistoryLimit: 10
  # -- Additional labels to add to each pod
  podLabels: {}
  # example.com/label: foo

  # -- Additional annotations to add to each pod
  podAnnotations: {}
  # example.com/annotation: foo

  # -- Deployment update strategy.
  # Ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
  # @default -- See [values.yaml](values.yaml)
  updateStrategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 40%
    type: RollingUpdate
  # -- Optional priority class
  priorityClassName: ''
  # -- Change `apiPriorityAndFairness` to `true` if you want to insulate the API calls made by Kyverno reports controller activities.
  # This will help ensure Kyverno reports stability in busy clusters.
  # Ref: https://kubernetes.io/docs/concepts/cluster-administration/flow-control/
  apiPriorityAndFairness: false
  # -- Priority level configuration.
  # The block is directly forwarded into the priorityLevelConfiguration, so you can use whatever specification you want.
  # ref: https://kubernetes.io/docs/concepts/cluster-administration/flow-control/#prioritylevelconfiguration
  # @default -- See [values.yaml](values.yaml)
  priorityLevelConfigurationSpec:
    type: Limited
    limited:
      nominalConcurrencyShares: 10
      limitResponse:
        queuing:
          queueLengthLimit: 50
        type: Queue
  # -- Change `hostNetwork` to `true` when you want the pod to share its host's network namespace.
  # Useful for situations like when you end up dealing with a custom CNI over Amazon EKS.
  # Update the `dnsPolicy` accordingly as well to suit the host network mode.
  hostNetwork: false
  # -- `dnsPolicy` determines the manner in which DNS resolution happens in the cluster.
  # In case of `hostNetwork: true`, usually, the `dnsPolicy` is suitable to be `ClusterFirstWithHostNet`.
  # For further reference: https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/#pod-s-dns-policy.
  dnsPolicy: ClusterFirst
  # -- Extra arguments passed to the container on the command line
  extraArgs: {}
  # -- Additional container environment variables.
  extraEnvVars: []
  # Example setting proxy
  # extraEnvVars:
  # - name: HTTPS_PROXY
  #   value: 'https://proxy.example.com:3128'

  resources:
    # -- Pod resource limits
    limits:
      memory: 128Mi
    # -- Pod resource requests
    requests:
      cpu: 100m
      memory: 64Mi
  # -- Node labels for pod assignment
  nodeSelector: {}
  # -- List of node taints to tolerate
  tolerations: []
  antiAffinity:
    # -- Pod antiAffinities toggle.
    # Enabled by default but can be disabled if you want to schedule pods to the same node.
    enabled: true
  # -- Pod anti affinity constraints.
  # @default -- See [values.yaml](values.yaml)
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 1
        podAffinityTerm:
          labelSelector:
            matchExpressions:
              - key: app.kubernetes.io/component
                operator: In
                values:
                  - reports-controller
          topologyKey: kubernetes.io/hostname
  # -- Pod affinity constraints.
  podAffinity: {}
  # -- Node affinity constraints.
  nodeAffinity: {}
  # -- Topology spread constraints.
  topologySpreadConstraints: []
  # -- Security context for the pod
  podSecurityContext:
    runAsUser: 1000
    runAsGroup: 1000
    runAsNonRoot: true
  # -- Security context for the containers
  securityContext:
    runAsNonRoot: true
    runAsUser: 1000
    runAsGroup: 1000
    privileged: false
    allowPrivilegeEscalation: false
    readOnlyRootFilesystem: true
    capabilities:
      drop:
        - ALL
    seccompProfile:
      type: RuntimeDefault
  podDisruptionBudget:
    # -- Enable PodDisruptionBudget.
    # Will always be enabled if replicas > 1. This non-declarative behavior should ideally be avoided, but changing it now would be breaking.
    enabled: false
    # -- Configures the minimum available pods for disruptions.
    # Cannot be used if `maxUnavailable` is set.
    minAvailable: 1
    # -- Configures the maximum unavailable pods for disruptions.
    # Cannot be used if `minAvailable` is set.
    maxUnavailable:
  # -- A writable volume to use for the TUF root initialization.
  tufRootMountPath: /.sigstore
  # -- Volume to be mounted in pods for TUF/cosign work.
  sigstoreVolume:
    emptyDir: {}
  caCertificates:
    # -- CA certificates to use with Kyverno deployments
    # This value is expected to be one large string of CA certificates
    data: ~
    # -- Volume to be mounted for CA certificates
    # Not used when `.Values.reportsController.caCertificates.data` is defined
    volume: {}
    # Example to use hostPath:
    # hostPath:
    #   path: /etc/pki/tls/ca-certificates.crt
    #   type: File
  metricsService:
    # -- Create service.
    create: true
    # -- Service port.
    # Metrics server will be exposed at this port.
    port: 8000
    # -- Service type.
    type: ClusterIP
    # -- (string) Service node port.
    # Only used if `type` is `NodePort`.
    nodePort: ~
    # -- Service annotations.
    annotations: {}
  networkPolicy:
    # -- When true, use a NetworkPolicy to allow ingress to the webhook
    # This is useful on clusters using Calico and/or native k8s network policies in a default-deny setup.
    enabled: false
    # -- A list of valid from selectors according to https://kubernetes.io/docs/concepts/services-networking/network-policies.
    ingressFrom: []
  serviceMonitor:
    # -- Create a `ServiceMonitor` to collect Prometheus metrics.
    enabled: false
    # -- Additional labels
    additionalLabels: {}
    # -- (string) Override namespace
    namespace: ~
    # -- Interval to scrape metrics
    interval: 30s
    # -- Timeout if metrics can't be retrieved in given time interval
    scrapeTimeout: 25s
    # -- Is TLS required for endpoint
    secure: false
    # -- TLS Configuration for endpoint
    tlsConfig: {}
    # -- RelabelConfigs to apply to samples before scraping
    relabelings: []
    # -- MetricRelabelConfigs to apply to samples before ingestion.
    metricRelabelings: []
  tracing:
    # -- Enable tracing
    enabled: false
    # -- (string) Traces receiver address
    address: ~
    # -- (string) Traces receiver port
    port: ~
    # -- (string) Traces receiver credentials
    creds: ~
  metering:
    # -- Disable metrics export
    disabled: false
    # -- Otel configuration, can be `prometheus` or `grpc`
    config: prometheus
    # -- Prometheus endpoint port
    port: 8000
    # -- (string) Otel collector endpoint
    collector: ~
    # -- (string) Otel collector credentials
    creds: ~
  profiling:
    # -- Enable profiling
    enabled: false
    # -- Profiling endpoint port
    port: 6060
    # -- Service type.
    serviceType: ClusterIP
    # -- Service node port.
    # Only used if `type` is `NodePort`.
    nodePort:

# -- Reserved values for Big Bang test automation
bbtests:
  enabled: false
  scripts:
    image: registry1.dso.mil/ironbank/opensource/kubernetes/kubectl:v1.30.5
    envs:
      ENABLED_POLICIES: '{{ $p := list }}{{ range $k, $v := .Values.policies }}{{ if $v.enabled }}{{ $p = append $p $k }}{{ end }}{{ end }}{{ join " " $p }}'
      IMAGE_PULL_SECRET: '{{ .Values.bbtests.imagePullSecret }}'
      KYVERNO_INSTALL: '{{ .Values.kyverno.install }}'
      KYVERNO_NAMESPACE: '{{ .Release.Namespace }}'
    additionalVolumeMounts:
      - name: "kyverno-policies-bbtest-manifests"
        mountPath: /yaml
      - name: "kyverno-policies-bbtest-kube-cache"
        mountPath: /.kube/cache
    additionalVolumes:
      - name: "kyverno-policies-bbtest-manifests"
        configMap:
          name: "kyverno-policies-bbtest-manifests"
      - name: "kyverno-policies-bbtest-kube-cache"
        emptyDir: {}
  imagePullSecret: private-registry

